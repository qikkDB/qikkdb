// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: messages/QueryResponseMessage.proto

#include "QueryResponseMessage.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)

namespace protobuf_Types_2fComplexPolygon_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_Types_2fComplexPolygon_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_ComplexPolygon;
}  // namespace protobuf_Types_2fComplexPolygon_2eproto
namespace protobuf_Types_2fPoint_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_Types_2fPoint_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_Point;
}  // namespace protobuf_Types_2fPoint_2eproto
namespace protobuf_messages_2fQueryResponseMessage_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_messages_2fQueryResponseMessage_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_QueryResponseDoublePayload;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_messages_2fQueryResponseMessage_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_QueryResponseFloatPayload;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_messages_2fQueryResponseMessage_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_QueryResponseInt64Payload;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_messages_2fQueryResponseMessage_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_QueryResponseIntPayload;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_messages_2fQueryResponseMessage_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_QueryResponseMessage_TimingEntry_DoNotUse;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_messages_2fQueryResponseMessage_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_QueryResponseStringPayload;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_messages_2fQueryResponseMessage_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_QueryResponseMessage_PayloadsEntry_DoNotUse;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_messages_2fQueryResponseMessage_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_QueryResponsePointPayload;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_messages_2fQueryResponseMessage_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_QueryResponsePolygonPayload;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_messages_2fQueryResponseMessage_2eproto ::google::protobuf::internal::SCCInfo<7> scc_info_QueryResponsePayload;
}  // namespace protobuf_messages_2fQueryResponseMessage_2eproto
namespace ColmnarDB {
namespace NetworkClient {
namespace Message {
class QueryResponseIntPayloadDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<QueryResponseIntPayload>
      _instance;
} _QueryResponseIntPayload_default_instance_;
class QueryResponseInt64PayloadDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<QueryResponseInt64Payload>
      _instance;
} _QueryResponseInt64Payload_default_instance_;
class QueryResponseFloatPayloadDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<QueryResponseFloatPayload>
      _instance;
} _QueryResponseFloatPayload_default_instance_;
class QueryResponseDoublePayloadDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<QueryResponseDoublePayload>
      _instance;
} _QueryResponseDoublePayload_default_instance_;
class QueryResponsePolygonPayloadDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<QueryResponsePolygonPayload>
      _instance;
} _QueryResponsePolygonPayload_default_instance_;
class QueryResponsePointPayloadDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<QueryResponsePointPayload>
      _instance;
} _QueryResponsePointPayload_default_instance_;
class QueryResponseStringPayloadDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<QueryResponseStringPayload>
      _instance;
} _QueryResponseStringPayload_default_instance_;
class QueryResponsePayloadDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<QueryResponsePayload>
      _instance;
  const ::ColmnarDB::NetworkClient::Message::QueryResponseIntPayload* intpayload_;
  const ::ColmnarDB::NetworkClient::Message::QueryResponseFloatPayload* floatpayload_;
  const ::ColmnarDB::NetworkClient::Message::QueryResponseInt64Payload* int64payload_;
  const ::ColmnarDB::NetworkClient::Message::QueryResponseDoublePayload* doublepayload_;
  const ::ColmnarDB::NetworkClient::Message::QueryResponsePointPayload* pointpayload_;
  const ::ColmnarDB::NetworkClient::Message::QueryResponsePolygonPayload* polygonpayload_;
  const ::ColmnarDB::NetworkClient::Message::QueryResponseStringPayload* stringpayload_;
} _QueryResponsePayload_default_instance_;
class QueryResponseMessage_PayloadsEntry_DoNotUseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<QueryResponseMessage_PayloadsEntry_DoNotUse>
      _instance;
} _QueryResponseMessage_PayloadsEntry_DoNotUse_default_instance_;
class QueryResponseMessage_TimingEntry_DoNotUseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<QueryResponseMessage_TimingEntry_DoNotUse>
      _instance;
} _QueryResponseMessage_TimingEntry_DoNotUse_default_instance_;
class QueryResponseMessageDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<QueryResponseMessage>
      _instance;
} _QueryResponseMessage_default_instance_;
}  // namespace Message
}  // namespace NetworkClient
}  // namespace ColmnarDB
namespace protobuf_messages_2fQueryResponseMessage_2eproto {
static void InitDefaultsQueryResponseIntPayload() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ColmnarDB::NetworkClient::Message::_QueryResponseIntPayload_default_instance_;
    new (ptr) ::ColmnarDB::NetworkClient::Message::QueryResponseIntPayload();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ColmnarDB::NetworkClient::Message::QueryResponseIntPayload::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_QueryResponseIntPayload =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsQueryResponseIntPayload}, {}};

static void InitDefaultsQueryResponseInt64Payload() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ColmnarDB::NetworkClient::Message::_QueryResponseInt64Payload_default_instance_;
    new (ptr) ::ColmnarDB::NetworkClient::Message::QueryResponseInt64Payload();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ColmnarDB::NetworkClient::Message::QueryResponseInt64Payload::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_QueryResponseInt64Payload =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsQueryResponseInt64Payload}, {}};

static void InitDefaultsQueryResponseFloatPayload() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ColmnarDB::NetworkClient::Message::_QueryResponseFloatPayload_default_instance_;
    new (ptr) ::ColmnarDB::NetworkClient::Message::QueryResponseFloatPayload();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ColmnarDB::NetworkClient::Message::QueryResponseFloatPayload::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_QueryResponseFloatPayload =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsQueryResponseFloatPayload}, {}};

static void InitDefaultsQueryResponseDoublePayload() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ColmnarDB::NetworkClient::Message::_QueryResponseDoublePayload_default_instance_;
    new (ptr) ::ColmnarDB::NetworkClient::Message::QueryResponseDoublePayload();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ColmnarDB::NetworkClient::Message::QueryResponseDoublePayload::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_QueryResponseDoublePayload =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsQueryResponseDoublePayload}, {}};

static void InitDefaultsQueryResponsePolygonPayload() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ColmnarDB::NetworkClient::Message::_QueryResponsePolygonPayload_default_instance_;
    new (ptr) ::ColmnarDB::NetworkClient::Message::QueryResponsePolygonPayload();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ColmnarDB::NetworkClient::Message::QueryResponsePolygonPayload::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_QueryResponsePolygonPayload =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsQueryResponsePolygonPayload}, {
      &protobuf_Types_2fComplexPolygon_2eproto::scc_info_ComplexPolygon.base,}};

static void InitDefaultsQueryResponsePointPayload() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ColmnarDB::NetworkClient::Message::_QueryResponsePointPayload_default_instance_;
    new (ptr) ::ColmnarDB::NetworkClient::Message::QueryResponsePointPayload();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ColmnarDB::NetworkClient::Message::QueryResponsePointPayload::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_QueryResponsePointPayload =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsQueryResponsePointPayload}, {
      &protobuf_Types_2fPoint_2eproto::scc_info_Point.base,}};

static void InitDefaultsQueryResponseStringPayload() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ColmnarDB::NetworkClient::Message::_QueryResponseStringPayload_default_instance_;
    new (ptr) ::ColmnarDB::NetworkClient::Message::QueryResponseStringPayload();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ColmnarDB::NetworkClient::Message::QueryResponseStringPayload::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_QueryResponseStringPayload =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsQueryResponseStringPayload}, {}};

static void InitDefaultsQueryResponsePayload() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ColmnarDB::NetworkClient::Message::_QueryResponsePayload_default_instance_;
    new (ptr) ::ColmnarDB::NetworkClient::Message::QueryResponsePayload();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ColmnarDB::NetworkClient::Message::QueryResponsePayload::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<7> scc_info_QueryResponsePayload =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 7, InitDefaultsQueryResponsePayload}, {
      &protobuf_messages_2fQueryResponseMessage_2eproto::scc_info_QueryResponseIntPayload.base,
      &protobuf_messages_2fQueryResponseMessage_2eproto::scc_info_QueryResponseFloatPayload.base,
      &protobuf_messages_2fQueryResponseMessage_2eproto::scc_info_QueryResponseInt64Payload.base,
      &protobuf_messages_2fQueryResponseMessage_2eproto::scc_info_QueryResponseDoublePayload.base,
      &protobuf_messages_2fQueryResponseMessage_2eproto::scc_info_QueryResponsePointPayload.base,
      &protobuf_messages_2fQueryResponseMessage_2eproto::scc_info_QueryResponsePolygonPayload.base,
      &protobuf_messages_2fQueryResponseMessage_2eproto::scc_info_QueryResponseStringPayload.base,}};

static void InitDefaultsQueryResponseMessage_PayloadsEntry_DoNotUse() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ColmnarDB::NetworkClient::Message::_QueryResponseMessage_PayloadsEntry_DoNotUse_default_instance_;
    new (ptr) ::ColmnarDB::NetworkClient::Message::QueryResponseMessage_PayloadsEntry_DoNotUse();
  }
  ::ColmnarDB::NetworkClient::Message::QueryResponseMessage_PayloadsEntry_DoNotUse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_QueryResponseMessage_PayloadsEntry_DoNotUse =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsQueryResponseMessage_PayloadsEntry_DoNotUse}, {
      &protobuf_messages_2fQueryResponseMessage_2eproto::scc_info_QueryResponsePayload.base,}};

static void InitDefaultsQueryResponseMessage_TimingEntry_DoNotUse() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ColmnarDB::NetworkClient::Message::_QueryResponseMessage_TimingEntry_DoNotUse_default_instance_;
    new (ptr) ::ColmnarDB::NetworkClient::Message::QueryResponseMessage_TimingEntry_DoNotUse();
  }
  ::ColmnarDB::NetworkClient::Message::QueryResponseMessage_TimingEntry_DoNotUse::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_QueryResponseMessage_TimingEntry_DoNotUse =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsQueryResponseMessage_TimingEntry_DoNotUse}, {}};

static void InitDefaultsQueryResponseMessage() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ColmnarDB::NetworkClient::Message::_QueryResponseMessage_default_instance_;
    new (ptr) ::ColmnarDB::NetworkClient::Message::QueryResponseMessage();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ColmnarDB::NetworkClient::Message::QueryResponseMessage::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<2> scc_info_QueryResponseMessage =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 2, InitDefaultsQueryResponseMessage}, {
      &protobuf_messages_2fQueryResponseMessage_2eproto::scc_info_QueryResponseMessage_PayloadsEntry_DoNotUse.base,
      &protobuf_messages_2fQueryResponseMessage_2eproto::scc_info_QueryResponseMessage_TimingEntry_DoNotUse.base,}};

void InitDefaults() {
  ::google::protobuf::internal::InitSCC(&scc_info_QueryResponseIntPayload.base);
  ::google::protobuf::internal::InitSCC(&scc_info_QueryResponseInt64Payload.base);
  ::google::protobuf::internal::InitSCC(&scc_info_QueryResponseFloatPayload.base);
  ::google::protobuf::internal::InitSCC(&scc_info_QueryResponseDoublePayload.base);
  ::google::protobuf::internal::InitSCC(&scc_info_QueryResponsePolygonPayload.base);
  ::google::protobuf::internal::InitSCC(&scc_info_QueryResponsePointPayload.base);
  ::google::protobuf::internal::InitSCC(&scc_info_QueryResponseStringPayload.base);
  ::google::protobuf::internal::InitSCC(&scc_info_QueryResponsePayload.base);
  ::google::protobuf::internal::InitSCC(&scc_info_QueryResponseMessage_PayloadsEntry_DoNotUse.base);
  ::google::protobuf::internal::InitSCC(&scc_info_QueryResponseMessage_TimingEntry_DoNotUse.base);
  ::google::protobuf::internal::InitSCC(&scc_info_QueryResponseMessage.base);
}

::google::protobuf::Metadata file_level_metadata[11];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ColmnarDB::NetworkClient::Message::QueryResponseIntPayload, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ColmnarDB::NetworkClient::Message::QueryResponseIntPayload, intdata_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ColmnarDB::NetworkClient::Message::QueryResponseInt64Payload, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ColmnarDB::NetworkClient::Message::QueryResponseInt64Payload, int64data_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ColmnarDB::NetworkClient::Message::QueryResponseFloatPayload, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ColmnarDB::NetworkClient::Message::QueryResponseFloatPayload, floatdata_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ColmnarDB::NetworkClient::Message::QueryResponseDoublePayload, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ColmnarDB::NetworkClient::Message::QueryResponseDoublePayload, doubledata_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ColmnarDB::NetworkClient::Message::QueryResponsePolygonPayload, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ColmnarDB::NetworkClient::Message::QueryResponsePolygonPayload, polygondata_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ColmnarDB::NetworkClient::Message::QueryResponsePointPayload, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ColmnarDB::NetworkClient::Message::QueryResponsePointPayload, pointdata_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ColmnarDB::NetworkClient::Message::QueryResponseStringPayload, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ColmnarDB::NetworkClient::Message::QueryResponseStringPayload, stringdata_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ColmnarDB::NetworkClient::Message::QueryResponsePayload, _internal_metadata_),
  ~0u,  // no _extensions_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ColmnarDB::NetworkClient::Message::QueryResponsePayload, _oneof_case_[0]),
  ~0u,  // no _weak_field_map_
  offsetof(::ColmnarDB::NetworkClient::Message::QueryResponsePayloadDefaultTypeInternal, intpayload_),
  offsetof(::ColmnarDB::NetworkClient::Message::QueryResponsePayloadDefaultTypeInternal, floatpayload_),
  offsetof(::ColmnarDB::NetworkClient::Message::QueryResponsePayloadDefaultTypeInternal, int64payload_),
  offsetof(::ColmnarDB::NetworkClient::Message::QueryResponsePayloadDefaultTypeInternal, doublepayload_),
  offsetof(::ColmnarDB::NetworkClient::Message::QueryResponsePayloadDefaultTypeInternal, pointpayload_),
  offsetof(::ColmnarDB::NetworkClient::Message::QueryResponsePayloadDefaultTypeInternal, polygonpayload_),
  offsetof(::ColmnarDB::NetworkClient::Message::QueryResponsePayloadDefaultTypeInternal, stringpayload_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ColmnarDB::NetworkClient::Message::QueryResponsePayload, payload_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ColmnarDB::NetworkClient::Message::QueryResponseMessage_PayloadsEntry_DoNotUse, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ColmnarDB::NetworkClient::Message::QueryResponseMessage_PayloadsEntry_DoNotUse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ColmnarDB::NetworkClient::Message::QueryResponseMessage_PayloadsEntry_DoNotUse, key_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ColmnarDB::NetworkClient::Message::QueryResponseMessage_PayloadsEntry_DoNotUse, value_),
  0,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ColmnarDB::NetworkClient::Message::QueryResponseMessage_TimingEntry_DoNotUse, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ColmnarDB::NetworkClient::Message::QueryResponseMessage_TimingEntry_DoNotUse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ColmnarDB::NetworkClient::Message::QueryResponseMessage_TimingEntry_DoNotUse, key_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ColmnarDB::NetworkClient::Message::QueryResponseMessage_TimingEntry_DoNotUse, value_),
  0,
  1,
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ColmnarDB::NetworkClient::Message::QueryResponseMessage, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ColmnarDB::NetworkClient::Message::QueryResponseMessage, payloads_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::ColmnarDB::NetworkClient::Message::QueryResponseMessage, timing_),
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::ColmnarDB::NetworkClient::Message::QueryResponseIntPayload)},
  { 6, -1, sizeof(::ColmnarDB::NetworkClient::Message::QueryResponseInt64Payload)},
  { 12, -1, sizeof(::ColmnarDB::NetworkClient::Message::QueryResponseFloatPayload)},
  { 18, -1, sizeof(::ColmnarDB::NetworkClient::Message::QueryResponseDoublePayload)},
  { 24, -1, sizeof(::ColmnarDB::NetworkClient::Message::QueryResponsePolygonPayload)},
  { 30, -1, sizeof(::ColmnarDB::NetworkClient::Message::QueryResponsePointPayload)},
  { 36, -1, sizeof(::ColmnarDB::NetworkClient::Message::QueryResponseStringPayload)},
  { 42, -1, sizeof(::ColmnarDB::NetworkClient::Message::QueryResponsePayload)},
  { 55, 62, sizeof(::ColmnarDB::NetworkClient::Message::QueryResponseMessage_PayloadsEntry_DoNotUse)},
  { 64, 71, sizeof(::ColmnarDB::NetworkClient::Message::QueryResponseMessage_TimingEntry_DoNotUse)},
  { 73, -1, sizeof(::ColmnarDB::NetworkClient::Message::QueryResponseMessage)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::ColmnarDB::NetworkClient::Message::_QueryResponseIntPayload_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::ColmnarDB::NetworkClient::Message::_QueryResponseInt64Payload_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::ColmnarDB::NetworkClient::Message::_QueryResponseFloatPayload_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::ColmnarDB::NetworkClient::Message::_QueryResponseDoublePayload_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::ColmnarDB::NetworkClient::Message::_QueryResponsePolygonPayload_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::ColmnarDB::NetworkClient::Message::_QueryResponsePointPayload_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::ColmnarDB::NetworkClient::Message::_QueryResponseStringPayload_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::ColmnarDB::NetworkClient::Message::_QueryResponsePayload_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::ColmnarDB::NetworkClient::Message::_QueryResponseMessage_PayloadsEntry_DoNotUse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::ColmnarDB::NetworkClient::Message::_QueryResponseMessage_TimingEntry_DoNotUse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::ColmnarDB::NetworkClient::Message::_QueryResponseMessage_default_instance_),
};

void protobuf_AssignDescriptors() {
  AddDescriptors();
  AssignDescriptors(
      "messages/QueryResponseMessage.proto", schemas, file_default_instances, TableStruct::offsets,
      file_level_metadata, NULL, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 11);
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n#messages/QueryResponseMessage.proto\022\037C"
      "olmnarDB.NetworkClient.Message\032\032Types/Co"
      "mplexPolygon.proto\032\021Types/Point.proto\"*\n"
      "\027QueryResponseIntPayload\022\017\n\007intData\030\001 \003("
      "\005\".\n\031QueryResponseInt64Payload\022\021\n\tint64D"
      "ata\030\001 \003(\003\".\n\031QueryResponseFloatPayload\022\021"
      "\n\tfloatData\030\001 \003(\002\"0\n\032QueryResponseDouble"
      "Payload\022\022\n\ndoubleData\030\001 \003(\001\"S\n\033QueryResp"
      "onsePolygonPayload\0224\n\013polygonData\030\001 \003(\0132"
      "\037.ColmnarDB.Types.ComplexPolygon\"F\n\031Quer"
      "yResponsePointPayload\022)\n\tpointData\030\001 \003(\013"
      "2\026.ColmnarDB.Types.Point\"0\n\032QueryRespons"
      "eStringPayload\022\022\n\nstringData\030\001 \003(\t\"\361\004\n\024Q"
      "ueryResponsePayload\022N\n\nintPayload\030\002 \001(\0132"
      "8.ColmnarDB.NetworkClient.Message.QueryR"
      "esponseIntPayloadH\000\022R\n\014floatPayload\030\003 \001("
      "\0132:.ColmnarDB.NetworkClient.Message.Quer"
      "yResponseFloatPayloadH\000\022R\n\014int64Payload\030"
      "\004 \001(\0132:.ColmnarDB.NetworkClient.Message."
      "QueryResponseInt64PayloadH\000\022T\n\rdoublePay"
      "load\030\005 \001(\0132;.ColmnarDB.NetworkClient.Mes"
      "sage.QueryResponseDoublePayloadH\000\022R\n\014poi"
      "ntPayload\030\006 \001(\0132:.ColmnarDB.NetworkClien"
      "t.Message.QueryResponsePointPayloadH\000\022V\n"
      "\016polygonPayload\030\007 \001(\0132<.ColmnarDB.Networ"
      "kClient.Message.QueryResponsePolygonPayl"
      "oadH\000\022T\n\rstringPayload\030\010 \001(\0132;.ColmnarDB"
      ".NetworkClient.Message.QueryResponseStri"
      "ngPayloadH\000B\t\n\007payload\"\327\002\n\024QueryResponse"
      "Message\022U\n\010payloads\030\001 \003(\0132C.ColmnarDB.Ne"
      "tworkClient.Message.QueryResponseMessage"
      ".PayloadsEntry\022Q\n\006timing\030\002 \003(\0132A.Colmnar"
      "DB.NetworkClient.Message.QueryResponseMe"
      "ssage.TimingEntry\032f\n\rPayloadsEntry\022\013\n\003ke"
      "y\030\001 \001(\t\022D\n\005value\030\002 \001(\01325.ColmnarDB.Netwo"
      "rkClient.Message.QueryResponsePayload:\0028"
      "\001\032-\n\013TimingEntry\022\013\n\003key\030\001 \001(\t\022\r\n\005value\030\002"
      " \001(\002:\0028\001b\006proto3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 1496);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "messages/QueryResponseMessage.proto", &protobuf_RegisterTypes);
  ::protobuf_Types_2fComplexPolygon_2eproto::AddDescriptors();
  ::protobuf_Types_2fPoint_2eproto::AddDescriptors();
}

void AddDescriptors() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_messages_2fQueryResponseMessage_2eproto
namespace ColmnarDB {
namespace NetworkClient {
namespace Message {

// ===================================================================

void QueryResponseIntPayload::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int QueryResponseIntPayload::kIntDataFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

QueryResponseIntPayload::QueryResponseIntPayload()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_messages_2fQueryResponseMessage_2eproto::scc_info_QueryResponseIntPayload.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:ColmnarDB.NetworkClient.Message.QueryResponseIntPayload)
}
QueryResponseIntPayload::QueryResponseIntPayload(const QueryResponseIntPayload& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      intdata_(from.intdata_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:ColmnarDB.NetworkClient.Message.QueryResponseIntPayload)
}

void QueryResponseIntPayload::SharedCtor() {
}

QueryResponseIntPayload::~QueryResponseIntPayload() {
  // @@protoc_insertion_point(destructor:ColmnarDB.NetworkClient.Message.QueryResponseIntPayload)
  SharedDtor();
}

void QueryResponseIntPayload::SharedDtor() {
}

void QueryResponseIntPayload::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* QueryResponseIntPayload::descriptor() {
  ::protobuf_messages_2fQueryResponseMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_messages_2fQueryResponseMessage_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const QueryResponseIntPayload& QueryResponseIntPayload::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_messages_2fQueryResponseMessage_2eproto::scc_info_QueryResponseIntPayload.base);
  return *internal_default_instance();
}


void QueryResponseIntPayload::Clear() {
// @@protoc_insertion_point(message_clear_start:ColmnarDB.NetworkClient.Message.QueryResponseIntPayload)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  intdata_.Clear();
  _internal_metadata_.Clear();
}

bool QueryResponseIntPayload::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ColmnarDB.NetworkClient.Message.QueryResponseIntPayload)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated int32 intData = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, this->mutable_intdata())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 1, 10u, input, this->mutable_intdata())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ColmnarDB.NetworkClient.Message.QueryResponseIntPayload)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ColmnarDB.NetworkClient.Message.QueryResponseIntPayload)
  return false;
#undef DO_
}

void QueryResponseIntPayload::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ColmnarDB.NetworkClient.Message.QueryResponseIntPayload)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated int32 intData = 1;
  if (this->intdata_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(1, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _intdata_cached_byte_size_));
  }
  for (int i = 0, n = this->intdata_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32NoTag(
      this->intdata(i), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:ColmnarDB.NetworkClient.Message.QueryResponseIntPayload)
}

::google::protobuf::uint8* QueryResponseIntPayload::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:ColmnarDB.NetworkClient.Message.QueryResponseIntPayload)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated int32 intData = 1;
  if (this->intdata_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      1,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::int32>(
            _intdata_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt32NoTagToArray(this->intdata_, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ColmnarDB.NetworkClient.Message.QueryResponseIntPayload)
  return target;
}

size_t QueryResponseIntPayload::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ColmnarDB.NetworkClient.Message.QueryResponseIntPayload)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated int32 intData = 1;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      Int32Size(this->intdata_);
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _intdata_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void QueryResponseIntPayload::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ColmnarDB.NetworkClient.Message.QueryResponseIntPayload)
  GOOGLE_DCHECK_NE(&from, this);
  const QueryResponseIntPayload* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const QueryResponseIntPayload>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ColmnarDB.NetworkClient.Message.QueryResponseIntPayload)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ColmnarDB.NetworkClient.Message.QueryResponseIntPayload)
    MergeFrom(*source);
  }
}

void QueryResponseIntPayload::MergeFrom(const QueryResponseIntPayload& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ColmnarDB.NetworkClient.Message.QueryResponseIntPayload)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  intdata_.MergeFrom(from.intdata_);
}

void QueryResponseIntPayload::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ColmnarDB.NetworkClient.Message.QueryResponseIntPayload)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void QueryResponseIntPayload::CopyFrom(const QueryResponseIntPayload& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ColmnarDB.NetworkClient.Message.QueryResponseIntPayload)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool QueryResponseIntPayload::IsInitialized() const {
  return true;
}

void QueryResponseIntPayload::Swap(QueryResponseIntPayload* other) {
  if (other == this) return;
  InternalSwap(other);
}
void QueryResponseIntPayload::InternalSwap(QueryResponseIntPayload* other) {
  using std::swap;
  intdata_.InternalSwap(&other->intdata_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata QueryResponseIntPayload::GetMetadata() const {
  protobuf_messages_2fQueryResponseMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_messages_2fQueryResponseMessage_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void QueryResponseInt64Payload::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int QueryResponseInt64Payload::kInt64DataFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

QueryResponseInt64Payload::QueryResponseInt64Payload()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_messages_2fQueryResponseMessage_2eproto::scc_info_QueryResponseInt64Payload.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:ColmnarDB.NetworkClient.Message.QueryResponseInt64Payload)
}
QueryResponseInt64Payload::QueryResponseInt64Payload(const QueryResponseInt64Payload& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      int64data_(from.int64data_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:ColmnarDB.NetworkClient.Message.QueryResponseInt64Payload)
}

void QueryResponseInt64Payload::SharedCtor() {
}

QueryResponseInt64Payload::~QueryResponseInt64Payload() {
  // @@protoc_insertion_point(destructor:ColmnarDB.NetworkClient.Message.QueryResponseInt64Payload)
  SharedDtor();
}

void QueryResponseInt64Payload::SharedDtor() {
}

void QueryResponseInt64Payload::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* QueryResponseInt64Payload::descriptor() {
  ::protobuf_messages_2fQueryResponseMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_messages_2fQueryResponseMessage_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const QueryResponseInt64Payload& QueryResponseInt64Payload::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_messages_2fQueryResponseMessage_2eproto::scc_info_QueryResponseInt64Payload.base);
  return *internal_default_instance();
}


void QueryResponseInt64Payload::Clear() {
// @@protoc_insertion_point(message_clear_start:ColmnarDB.NetworkClient.Message.QueryResponseInt64Payload)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  int64data_.Clear();
  _internal_metadata_.Clear();
}

bool QueryResponseInt64Payload::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ColmnarDB.NetworkClient.Message.QueryResponseInt64Payload)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated int64 int64Data = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, this->mutable_int64data())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 1, 10u, input, this->mutable_int64data())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ColmnarDB.NetworkClient.Message.QueryResponseInt64Payload)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ColmnarDB.NetworkClient.Message.QueryResponseInt64Payload)
  return false;
#undef DO_
}

void QueryResponseInt64Payload::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ColmnarDB.NetworkClient.Message.QueryResponseInt64Payload)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated int64 int64Data = 1;
  if (this->int64data_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(1, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _int64data_cached_byte_size_));
  }
  for (int i = 0, n = this->int64data_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64NoTag(
      this->int64data(i), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:ColmnarDB.NetworkClient.Message.QueryResponseInt64Payload)
}

::google::protobuf::uint8* QueryResponseInt64Payload::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:ColmnarDB.NetworkClient.Message.QueryResponseInt64Payload)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated int64 int64Data = 1;
  if (this->int64data_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      1,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::int32>(
            _int64data_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt64NoTagToArray(this->int64data_, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ColmnarDB.NetworkClient.Message.QueryResponseInt64Payload)
  return target;
}

size_t QueryResponseInt64Payload::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ColmnarDB.NetworkClient.Message.QueryResponseInt64Payload)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated int64 int64Data = 1;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      Int64Size(this->int64data_);
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _int64data_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void QueryResponseInt64Payload::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ColmnarDB.NetworkClient.Message.QueryResponseInt64Payload)
  GOOGLE_DCHECK_NE(&from, this);
  const QueryResponseInt64Payload* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const QueryResponseInt64Payload>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ColmnarDB.NetworkClient.Message.QueryResponseInt64Payload)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ColmnarDB.NetworkClient.Message.QueryResponseInt64Payload)
    MergeFrom(*source);
  }
}

void QueryResponseInt64Payload::MergeFrom(const QueryResponseInt64Payload& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ColmnarDB.NetworkClient.Message.QueryResponseInt64Payload)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  int64data_.MergeFrom(from.int64data_);
}

void QueryResponseInt64Payload::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ColmnarDB.NetworkClient.Message.QueryResponseInt64Payload)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void QueryResponseInt64Payload::CopyFrom(const QueryResponseInt64Payload& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ColmnarDB.NetworkClient.Message.QueryResponseInt64Payload)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool QueryResponseInt64Payload::IsInitialized() const {
  return true;
}

void QueryResponseInt64Payload::Swap(QueryResponseInt64Payload* other) {
  if (other == this) return;
  InternalSwap(other);
}
void QueryResponseInt64Payload::InternalSwap(QueryResponseInt64Payload* other) {
  using std::swap;
  int64data_.InternalSwap(&other->int64data_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata QueryResponseInt64Payload::GetMetadata() const {
  protobuf_messages_2fQueryResponseMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_messages_2fQueryResponseMessage_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void QueryResponseFloatPayload::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int QueryResponseFloatPayload::kFloatDataFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

QueryResponseFloatPayload::QueryResponseFloatPayload()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_messages_2fQueryResponseMessage_2eproto::scc_info_QueryResponseFloatPayload.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:ColmnarDB.NetworkClient.Message.QueryResponseFloatPayload)
}
QueryResponseFloatPayload::QueryResponseFloatPayload(const QueryResponseFloatPayload& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      floatdata_(from.floatdata_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:ColmnarDB.NetworkClient.Message.QueryResponseFloatPayload)
}

void QueryResponseFloatPayload::SharedCtor() {
}

QueryResponseFloatPayload::~QueryResponseFloatPayload() {
  // @@protoc_insertion_point(destructor:ColmnarDB.NetworkClient.Message.QueryResponseFloatPayload)
  SharedDtor();
}

void QueryResponseFloatPayload::SharedDtor() {
}

void QueryResponseFloatPayload::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* QueryResponseFloatPayload::descriptor() {
  ::protobuf_messages_2fQueryResponseMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_messages_2fQueryResponseMessage_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const QueryResponseFloatPayload& QueryResponseFloatPayload::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_messages_2fQueryResponseMessage_2eproto::scc_info_QueryResponseFloatPayload.base);
  return *internal_default_instance();
}


void QueryResponseFloatPayload::Clear() {
// @@protoc_insertion_point(message_clear_start:ColmnarDB.NetworkClient.Message.QueryResponseFloatPayload)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  floatdata_.Clear();
  _internal_metadata_.Clear();
}

bool QueryResponseFloatPayload::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ColmnarDB.NetworkClient.Message.QueryResponseFloatPayload)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated float floatData = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, this->mutable_floatdata())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(13u /* 13 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 1, 10u, input, this->mutable_floatdata())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ColmnarDB.NetworkClient.Message.QueryResponseFloatPayload)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ColmnarDB.NetworkClient.Message.QueryResponseFloatPayload)
  return false;
#undef DO_
}

void QueryResponseFloatPayload::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ColmnarDB.NetworkClient.Message.QueryResponseFloatPayload)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated float floatData = 1;
  if (this->floatdata_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(1, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _floatdata_cached_byte_size_));
    ::google::protobuf::internal::WireFormatLite::WriteFloatArray(
      this->floatdata().data(), this->floatdata_size(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:ColmnarDB.NetworkClient.Message.QueryResponseFloatPayload)
}

::google::protobuf::uint8* QueryResponseFloatPayload::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:ColmnarDB.NetworkClient.Message.QueryResponseFloatPayload)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated float floatData = 1;
  if (this->floatdata_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      1,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::int32>(
            _floatdata_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteFloatNoTagToArray(this->floatdata_, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ColmnarDB.NetworkClient.Message.QueryResponseFloatPayload)
  return target;
}

size_t QueryResponseFloatPayload::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ColmnarDB.NetworkClient.Message.QueryResponseFloatPayload)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated float floatData = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->floatdata_size());
    size_t data_size = 4UL * count;
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _floatdata_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void QueryResponseFloatPayload::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ColmnarDB.NetworkClient.Message.QueryResponseFloatPayload)
  GOOGLE_DCHECK_NE(&from, this);
  const QueryResponseFloatPayload* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const QueryResponseFloatPayload>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ColmnarDB.NetworkClient.Message.QueryResponseFloatPayload)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ColmnarDB.NetworkClient.Message.QueryResponseFloatPayload)
    MergeFrom(*source);
  }
}

void QueryResponseFloatPayload::MergeFrom(const QueryResponseFloatPayload& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ColmnarDB.NetworkClient.Message.QueryResponseFloatPayload)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  floatdata_.MergeFrom(from.floatdata_);
}

void QueryResponseFloatPayload::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ColmnarDB.NetworkClient.Message.QueryResponseFloatPayload)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void QueryResponseFloatPayload::CopyFrom(const QueryResponseFloatPayload& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ColmnarDB.NetworkClient.Message.QueryResponseFloatPayload)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool QueryResponseFloatPayload::IsInitialized() const {
  return true;
}

void QueryResponseFloatPayload::Swap(QueryResponseFloatPayload* other) {
  if (other == this) return;
  InternalSwap(other);
}
void QueryResponseFloatPayload::InternalSwap(QueryResponseFloatPayload* other) {
  using std::swap;
  floatdata_.InternalSwap(&other->floatdata_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata QueryResponseFloatPayload::GetMetadata() const {
  protobuf_messages_2fQueryResponseMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_messages_2fQueryResponseMessage_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void QueryResponseDoublePayload::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int QueryResponseDoublePayload::kDoubleDataFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

QueryResponseDoublePayload::QueryResponseDoublePayload()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_messages_2fQueryResponseMessage_2eproto::scc_info_QueryResponseDoublePayload.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:ColmnarDB.NetworkClient.Message.QueryResponseDoublePayload)
}
QueryResponseDoublePayload::QueryResponseDoublePayload(const QueryResponseDoublePayload& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      doubledata_(from.doubledata_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:ColmnarDB.NetworkClient.Message.QueryResponseDoublePayload)
}

void QueryResponseDoublePayload::SharedCtor() {
}

QueryResponseDoublePayload::~QueryResponseDoublePayload() {
  // @@protoc_insertion_point(destructor:ColmnarDB.NetworkClient.Message.QueryResponseDoublePayload)
  SharedDtor();
}

void QueryResponseDoublePayload::SharedDtor() {
}

void QueryResponseDoublePayload::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* QueryResponseDoublePayload::descriptor() {
  ::protobuf_messages_2fQueryResponseMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_messages_2fQueryResponseMessage_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const QueryResponseDoublePayload& QueryResponseDoublePayload::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_messages_2fQueryResponseMessage_2eproto::scc_info_QueryResponseDoublePayload.base);
  return *internal_default_instance();
}


void QueryResponseDoublePayload::Clear() {
// @@protoc_insertion_point(message_clear_start:ColmnarDB.NetworkClient.Message.QueryResponseDoublePayload)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  doubledata_.Clear();
  _internal_metadata_.Clear();
}

bool QueryResponseDoublePayload::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ColmnarDB.NetworkClient.Message.QueryResponseDoublePayload)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated double doubleData = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, this->mutable_doubledata())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(9u /* 9 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 1, 10u, input, this->mutable_doubledata())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ColmnarDB.NetworkClient.Message.QueryResponseDoublePayload)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ColmnarDB.NetworkClient.Message.QueryResponseDoublePayload)
  return false;
#undef DO_
}

void QueryResponseDoublePayload::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ColmnarDB.NetworkClient.Message.QueryResponseDoublePayload)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated double doubleData = 1;
  if (this->doubledata_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(1, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _doubledata_cached_byte_size_));
    ::google::protobuf::internal::WireFormatLite::WriteDoubleArray(
      this->doubledata().data(), this->doubledata_size(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:ColmnarDB.NetworkClient.Message.QueryResponseDoublePayload)
}

::google::protobuf::uint8* QueryResponseDoublePayload::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:ColmnarDB.NetworkClient.Message.QueryResponseDoublePayload)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated double doubleData = 1;
  if (this->doubledata_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      1,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::int32>(
            _doubledata_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteDoubleNoTagToArray(this->doubledata_, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ColmnarDB.NetworkClient.Message.QueryResponseDoublePayload)
  return target;
}

size_t QueryResponseDoublePayload::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ColmnarDB.NetworkClient.Message.QueryResponseDoublePayload)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated double doubleData = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->doubledata_size());
    size_t data_size = 8UL * count;
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _doubledata_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void QueryResponseDoublePayload::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ColmnarDB.NetworkClient.Message.QueryResponseDoublePayload)
  GOOGLE_DCHECK_NE(&from, this);
  const QueryResponseDoublePayload* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const QueryResponseDoublePayload>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ColmnarDB.NetworkClient.Message.QueryResponseDoublePayload)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ColmnarDB.NetworkClient.Message.QueryResponseDoublePayload)
    MergeFrom(*source);
  }
}

void QueryResponseDoublePayload::MergeFrom(const QueryResponseDoublePayload& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ColmnarDB.NetworkClient.Message.QueryResponseDoublePayload)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  doubledata_.MergeFrom(from.doubledata_);
}

void QueryResponseDoublePayload::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ColmnarDB.NetworkClient.Message.QueryResponseDoublePayload)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void QueryResponseDoublePayload::CopyFrom(const QueryResponseDoublePayload& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ColmnarDB.NetworkClient.Message.QueryResponseDoublePayload)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool QueryResponseDoublePayload::IsInitialized() const {
  return true;
}

void QueryResponseDoublePayload::Swap(QueryResponseDoublePayload* other) {
  if (other == this) return;
  InternalSwap(other);
}
void QueryResponseDoublePayload::InternalSwap(QueryResponseDoublePayload* other) {
  using std::swap;
  doubledata_.InternalSwap(&other->doubledata_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata QueryResponseDoublePayload::GetMetadata() const {
  protobuf_messages_2fQueryResponseMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_messages_2fQueryResponseMessage_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void QueryResponsePolygonPayload::InitAsDefaultInstance() {
}
void QueryResponsePolygonPayload::clear_polygondata() {
  polygondata_.Clear();
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int QueryResponsePolygonPayload::kPolygonDataFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

QueryResponsePolygonPayload::QueryResponsePolygonPayload()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_messages_2fQueryResponseMessage_2eproto::scc_info_QueryResponsePolygonPayload.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:ColmnarDB.NetworkClient.Message.QueryResponsePolygonPayload)
}
QueryResponsePolygonPayload::QueryResponsePolygonPayload(const QueryResponsePolygonPayload& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      polygondata_(from.polygondata_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:ColmnarDB.NetworkClient.Message.QueryResponsePolygonPayload)
}

void QueryResponsePolygonPayload::SharedCtor() {
}

QueryResponsePolygonPayload::~QueryResponsePolygonPayload() {
  // @@protoc_insertion_point(destructor:ColmnarDB.NetworkClient.Message.QueryResponsePolygonPayload)
  SharedDtor();
}

void QueryResponsePolygonPayload::SharedDtor() {
}

void QueryResponsePolygonPayload::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* QueryResponsePolygonPayload::descriptor() {
  ::protobuf_messages_2fQueryResponseMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_messages_2fQueryResponseMessage_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const QueryResponsePolygonPayload& QueryResponsePolygonPayload::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_messages_2fQueryResponseMessage_2eproto::scc_info_QueryResponsePolygonPayload.base);
  return *internal_default_instance();
}


void QueryResponsePolygonPayload::Clear() {
// @@protoc_insertion_point(message_clear_start:ColmnarDB.NetworkClient.Message.QueryResponsePolygonPayload)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  polygondata_.Clear();
  _internal_metadata_.Clear();
}

bool QueryResponsePolygonPayload::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ColmnarDB.NetworkClient.Message.QueryResponsePolygonPayload)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .ColmnarDB.Types.ComplexPolygon polygonData = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_polygondata()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ColmnarDB.NetworkClient.Message.QueryResponsePolygonPayload)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ColmnarDB.NetworkClient.Message.QueryResponsePolygonPayload)
  return false;
#undef DO_
}

void QueryResponsePolygonPayload::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ColmnarDB.NetworkClient.Message.QueryResponsePolygonPayload)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .ColmnarDB.Types.ComplexPolygon polygonData = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->polygondata_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1,
      this->polygondata(static_cast<int>(i)),
      output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:ColmnarDB.NetworkClient.Message.QueryResponsePolygonPayload)
}

::google::protobuf::uint8* QueryResponsePolygonPayload::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:ColmnarDB.NetworkClient.Message.QueryResponsePolygonPayload)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .ColmnarDB.Types.ComplexPolygon polygonData = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->polygondata_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->polygondata(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ColmnarDB.NetworkClient.Message.QueryResponsePolygonPayload)
  return target;
}

size_t QueryResponsePolygonPayload::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ColmnarDB.NetworkClient.Message.QueryResponsePolygonPayload)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .ColmnarDB.Types.ComplexPolygon polygonData = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->polygondata_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->polygondata(static_cast<int>(i)));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void QueryResponsePolygonPayload::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ColmnarDB.NetworkClient.Message.QueryResponsePolygonPayload)
  GOOGLE_DCHECK_NE(&from, this);
  const QueryResponsePolygonPayload* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const QueryResponsePolygonPayload>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ColmnarDB.NetworkClient.Message.QueryResponsePolygonPayload)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ColmnarDB.NetworkClient.Message.QueryResponsePolygonPayload)
    MergeFrom(*source);
  }
}

void QueryResponsePolygonPayload::MergeFrom(const QueryResponsePolygonPayload& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ColmnarDB.NetworkClient.Message.QueryResponsePolygonPayload)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  polygondata_.MergeFrom(from.polygondata_);
}

void QueryResponsePolygonPayload::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ColmnarDB.NetworkClient.Message.QueryResponsePolygonPayload)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void QueryResponsePolygonPayload::CopyFrom(const QueryResponsePolygonPayload& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ColmnarDB.NetworkClient.Message.QueryResponsePolygonPayload)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool QueryResponsePolygonPayload::IsInitialized() const {
  return true;
}

void QueryResponsePolygonPayload::Swap(QueryResponsePolygonPayload* other) {
  if (other == this) return;
  InternalSwap(other);
}
void QueryResponsePolygonPayload::InternalSwap(QueryResponsePolygonPayload* other) {
  using std::swap;
  CastToBase(&polygondata_)->InternalSwap(CastToBase(&other->polygondata_));
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata QueryResponsePolygonPayload::GetMetadata() const {
  protobuf_messages_2fQueryResponseMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_messages_2fQueryResponseMessage_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void QueryResponsePointPayload::InitAsDefaultInstance() {
}
void QueryResponsePointPayload::clear_pointdata() {
  pointdata_.Clear();
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int QueryResponsePointPayload::kPointDataFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

QueryResponsePointPayload::QueryResponsePointPayload()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_messages_2fQueryResponseMessage_2eproto::scc_info_QueryResponsePointPayload.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:ColmnarDB.NetworkClient.Message.QueryResponsePointPayload)
}
QueryResponsePointPayload::QueryResponsePointPayload(const QueryResponsePointPayload& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      pointdata_(from.pointdata_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:ColmnarDB.NetworkClient.Message.QueryResponsePointPayload)
}

void QueryResponsePointPayload::SharedCtor() {
}

QueryResponsePointPayload::~QueryResponsePointPayload() {
  // @@protoc_insertion_point(destructor:ColmnarDB.NetworkClient.Message.QueryResponsePointPayload)
  SharedDtor();
}

void QueryResponsePointPayload::SharedDtor() {
}

void QueryResponsePointPayload::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* QueryResponsePointPayload::descriptor() {
  ::protobuf_messages_2fQueryResponseMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_messages_2fQueryResponseMessage_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const QueryResponsePointPayload& QueryResponsePointPayload::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_messages_2fQueryResponseMessage_2eproto::scc_info_QueryResponsePointPayload.base);
  return *internal_default_instance();
}


void QueryResponsePointPayload::Clear() {
// @@protoc_insertion_point(message_clear_start:ColmnarDB.NetworkClient.Message.QueryResponsePointPayload)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  pointdata_.Clear();
  _internal_metadata_.Clear();
}

bool QueryResponsePointPayload::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ColmnarDB.NetworkClient.Message.QueryResponsePointPayload)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .ColmnarDB.Types.Point pointData = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_pointdata()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ColmnarDB.NetworkClient.Message.QueryResponsePointPayload)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ColmnarDB.NetworkClient.Message.QueryResponsePointPayload)
  return false;
#undef DO_
}

void QueryResponsePointPayload::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ColmnarDB.NetworkClient.Message.QueryResponsePointPayload)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .ColmnarDB.Types.Point pointData = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->pointdata_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1,
      this->pointdata(static_cast<int>(i)),
      output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:ColmnarDB.NetworkClient.Message.QueryResponsePointPayload)
}

::google::protobuf::uint8* QueryResponsePointPayload::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:ColmnarDB.NetworkClient.Message.QueryResponsePointPayload)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .ColmnarDB.Types.Point pointData = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->pointdata_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->pointdata(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ColmnarDB.NetworkClient.Message.QueryResponsePointPayload)
  return target;
}

size_t QueryResponsePointPayload::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ColmnarDB.NetworkClient.Message.QueryResponsePointPayload)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .ColmnarDB.Types.Point pointData = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->pointdata_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->pointdata(static_cast<int>(i)));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void QueryResponsePointPayload::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ColmnarDB.NetworkClient.Message.QueryResponsePointPayload)
  GOOGLE_DCHECK_NE(&from, this);
  const QueryResponsePointPayload* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const QueryResponsePointPayload>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ColmnarDB.NetworkClient.Message.QueryResponsePointPayload)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ColmnarDB.NetworkClient.Message.QueryResponsePointPayload)
    MergeFrom(*source);
  }
}

void QueryResponsePointPayload::MergeFrom(const QueryResponsePointPayload& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ColmnarDB.NetworkClient.Message.QueryResponsePointPayload)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  pointdata_.MergeFrom(from.pointdata_);
}

void QueryResponsePointPayload::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ColmnarDB.NetworkClient.Message.QueryResponsePointPayload)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void QueryResponsePointPayload::CopyFrom(const QueryResponsePointPayload& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ColmnarDB.NetworkClient.Message.QueryResponsePointPayload)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool QueryResponsePointPayload::IsInitialized() const {
  return true;
}

void QueryResponsePointPayload::Swap(QueryResponsePointPayload* other) {
  if (other == this) return;
  InternalSwap(other);
}
void QueryResponsePointPayload::InternalSwap(QueryResponsePointPayload* other) {
  using std::swap;
  CastToBase(&pointdata_)->InternalSwap(CastToBase(&other->pointdata_));
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata QueryResponsePointPayload::GetMetadata() const {
  protobuf_messages_2fQueryResponseMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_messages_2fQueryResponseMessage_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void QueryResponseStringPayload::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int QueryResponseStringPayload::kStringDataFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

QueryResponseStringPayload::QueryResponseStringPayload()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_messages_2fQueryResponseMessage_2eproto::scc_info_QueryResponseStringPayload.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:ColmnarDB.NetworkClient.Message.QueryResponseStringPayload)
}
QueryResponseStringPayload::QueryResponseStringPayload(const QueryResponseStringPayload& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      stringdata_(from.stringdata_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:ColmnarDB.NetworkClient.Message.QueryResponseStringPayload)
}

void QueryResponseStringPayload::SharedCtor() {
}

QueryResponseStringPayload::~QueryResponseStringPayload() {
  // @@protoc_insertion_point(destructor:ColmnarDB.NetworkClient.Message.QueryResponseStringPayload)
  SharedDtor();
}

void QueryResponseStringPayload::SharedDtor() {
}

void QueryResponseStringPayload::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* QueryResponseStringPayload::descriptor() {
  ::protobuf_messages_2fQueryResponseMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_messages_2fQueryResponseMessage_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const QueryResponseStringPayload& QueryResponseStringPayload::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_messages_2fQueryResponseMessage_2eproto::scc_info_QueryResponseStringPayload.base);
  return *internal_default_instance();
}


void QueryResponseStringPayload::Clear() {
// @@protoc_insertion_point(message_clear_start:ColmnarDB.NetworkClient.Message.QueryResponseStringPayload)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  stringdata_.Clear();
  _internal_metadata_.Clear();
}

bool QueryResponseStringPayload::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ColmnarDB.NetworkClient.Message.QueryResponseStringPayload)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated string stringData = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_stringdata()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->stringdata(this->stringdata_size() - 1).data(),
            static_cast<int>(this->stringdata(this->stringdata_size() - 1).length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "ColmnarDB.NetworkClient.Message.QueryResponseStringPayload.stringData"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ColmnarDB.NetworkClient.Message.QueryResponseStringPayload)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ColmnarDB.NetworkClient.Message.QueryResponseStringPayload)
  return false;
#undef DO_
}

void QueryResponseStringPayload::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ColmnarDB.NetworkClient.Message.QueryResponseStringPayload)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated string stringData = 1;
  for (int i = 0, n = this->stringdata_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->stringdata(i).data(), static_cast<int>(this->stringdata(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ColmnarDB.NetworkClient.Message.QueryResponseStringPayload.stringData");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      1, this->stringdata(i), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:ColmnarDB.NetworkClient.Message.QueryResponseStringPayload)
}

::google::protobuf::uint8* QueryResponseStringPayload::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:ColmnarDB.NetworkClient.Message.QueryResponseStringPayload)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated string stringData = 1;
  for (int i = 0, n = this->stringdata_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->stringdata(i).data(), static_cast<int>(this->stringdata(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "ColmnarDB.NetworkClient.Message.QueryResponseStringPayload.stringData");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(1, this->stringdata(i), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ColmnarDB.NetworkClient.Message.QueryResponseStringPayload)
  return target;
}

size_t QueryResponseStringPayload::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ColmnarDB.NetworkClient.Message.QueryResponseStringPayload)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated string stringData = 1;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->stringdata_size());
  for (int i = 0, n = this->stringdata_size(); i < n; i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->stringdata(i));
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void QueryResponseStringPayload::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ColmnarDB.NetworkClient.Message.QueryResponseStringPayload)
  GOOGLE_DCHECK_NE(&from, this);
  const QueryResponseStringPayload* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const QueryResponseStringPayload>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ColmnarDB.NetworkClient.Message.QueryResponseStringPayload)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ColmnarDB.NetworkClient.Message.QueryResponseStringPayload)
    MergeFrom(*source);
  }
}

void QueryResponseStringPayload::MergeFrom(const QueryResponseStringPayload& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ColmnarDB.NetworkClient.Message.QueryResponseStringPayload)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  stringdata_.MergeFrom(from.stringdata_);
}

void QueryResponseStringPayload::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ColmnarDB.NetworkClient.Message.QueryResponseStringPayload)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void QueryResponseStringPayload::CopyFrom(const QueryResponseStringPayload& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ColmnarDB.NetworkClient.Message.QueryResponseStringPayload)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool QueryResponseStringPayload::IsInitialized() const {
  return true;
}

void QueryResponseStringPayload::Swap(QueryResponseStringPayload* other) {
  if (other == this) return;
  InternalSwap(other);
}
void QueryResponseStringPayload::InternalSwap(QueryResponseStringPayload* other) {
  using std::swap;
  stringdata_.InternalSwap(CastToBase(&other->stringdata_));
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata QueryResponseStringPayload::GetMetadata() const {
  protobuf_messages_2fQueryResponseMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_messages_2fQueryResponseMessage_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void QueryResponsePayload::InitAsDefaultInstance() {
  ::ColmnarDB::NetworkClient::Message::_QueryResponsePayload_default_instance_.intpayload_ = const_cast< ::ColmnarDB::NetworkClient::Message::QueryResponseIntPayload*>(
      ::ColmnarDB::NetworkClient::Message::QueryResponseIntPayload::internal_default_instance());
  ::ColmnarDB::NetworkClient::Message::_QueryResponsePayload_default_instance_.floatpayload_ = const_cast< ::ColmnarDB::NetworkClient::Message::QueryResponseFloatPayload*>(
      ::ColmnarDB::NetworkClient::Message::QueryResponseFloatPayload::internal_default_instance());
  ::ColmnarDB::NetworkClient::Message::_QueryResponsePayload_default_instance_.int64payload_ = const_cast< ::ColmnarDB::NetworkClient::Message::QueryResponseInt64Payload*>(
      ::ColmnarDB::NetworkClient::Message::QueryResponseInt64Payload::internal_default_instance());
  ::ColmnarDB::NetworkClient::Message::_QueryResponsePayload_default_instance_.doublepayload_ = const_cast< ::ColmnarDB::NetworkClient::Message::QueryResponseDoublePayload*>(
      ::ColmnarDB::NetworkClient::Message::QueryResponseDoublePayload::internal_default_instance());
  ::ColmnarDB::NetworkClient::Message::_QueryResponsePayload_default_instance_.pointpayload_ = const_cast< ::ColmnarDB::NetworkClient::Message::QueryResponsePointPayload*>(
      ::ColmnarDB::NetworkClient::Message::QueryResponsePointPayload::internal_default_instance());
  ::ColmnarDB::NetworkClient::Message::_QueryResponsePayload_default_instance_.polygonpayload_ = const_cast< ::ColmnarDB::NetworkClient::Message::QueryResponsePolygonPayload*>(
      ::ColmnarDB::NetworkClient::Message::QueryResponsePolygonPayload::internal_default_instance());
  ::ColmnarDB::NetworkClient::Message::_QueryResponsePayload_default_instance_.stringpayload_ = const_cast< ::ColmnarDB::NetworkClient::Message::QueryResponseStringPayload*>(
      ::ColmnarDB::NetworkClient::Message::QueryResponseStringPayload::internal_default_instance());
}
void QueryResponsePayload::set_allocated_intpayload(::ColmnarDB::NetworkClient::Message::QueryResponseIntPayload* intpayload) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_payload();
  if (intpayload) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      intpayload = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, intpayload, submessage_arena);
    }
    set_has_intpayload();
    payload_.intpayload_ = intpayload;
  }
  // @@protoc_insertion_point(field_set_allocated:ColmnarDB.NetworkClient.Message.QueryResponsePayload.intPayload)
}
void QueryResponsePayload::set_allocated_floatpayload(::ColmnarDB::NetworkClient::Message::QueryResponseFloatPayload* floatpayload) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_payload();
  if (floatpayload) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      floatpayload = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, floatpayload, submessage_arena);
    }
    set_has_floatpayload();
    payload_.floatpayload_ = floatpayload;
  }
  // @@protoc_insertion_point(field_set_allocated:ColmnarDB.NetworkClient.Message.QueryResponsePayload.floatPayload)
}
void QueryResponsePayload::set_allocated_int64payload(::ColmnarDB::NetworkClient::Message::QueryResponseInt64Payload* int64payload) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_payload();
  if (int64payload) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      int64payload = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, int64payload, submessage_arena);
    }
    set_has_int64payload();
    payload_.int64payload_ = int64payload;
  }
  // @@protoc_insertion_point(field_set_allocated:ColmnarDB.NetworkClient.Message.QueryResponsePayload.int64Payload)
}
void QueryResponsePayload::set_allocated_doublepayload(::ColmnarDB::NetworkClient::Message::QueryResponseDoublePayload* doublepayload) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_payload();
  if (doublepayload) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      doublepayload = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, doublepayload, submessage_arena);
    }
    set_has_doublepayload();
    payload_.doublepayload_ = doublepayload;
  }
  // @@protoc_insertion_point(field_set_allocated:ColmnarDB.NetworkClient.Message.QueryResponsePayload.doublePayload)
}
void QueryResponsePayload::set_allocated_pointpayload(::ColmnarDB::NetworkClient::Message::QueryResponsePointPayload* pointpayload) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_payload();
  if (pointpayload) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      pointpayload = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, pointpayload, submessage_arena);
    }
    set_has_pointpayload();
    payload_.pointpayload_ = pointpayload;
  }
  // @@protoc_insertion_point(field_set_allocated:ColmnarDB.NetworkClient.Message.QueryResponsePayload.pointPayload)
}
void QueryResponsePayload::set_allocated_polygonpayload(::ColmnarDB::NetworkClient::Message::QueryResponsePolygonPayload* polygonpayload) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_payload();
  if (polygonpayload) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      polygonpayload = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, polygonpayload, submessage_arena);
    }
    set_has_polygonpayload();
    payload_.polygonpayload_ = polygonpayload;
  }
  // @@protoc_insertion_point(field_set_allocated:ColmnarDB.NetworkClient.Message.QueryResponsePayload.polygonPayload)
}
void QueryResponsePayload::set_allocated_stringpayload(::ColmnarDB::NetworkClient::Message::QueryResponseStringPayload* stringpayload) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_payload();
  if (stringpayload) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      stringpayload = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, stringpayload, submessage_arena);
    }
    set_has_stringpayload();
    payload_.stringpayload_ = stringpayload;
  }
  // @@protoc_insertion_point(field_set_allocated:ColmnarDB.NetworkClient.Message.QueryResponsePayload.stringPayload)
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int QueryResponsePayload::kIntPayloadFieldNumber;
const int QueryResponsePayload::kFloatPayloadFieldNumber;
const int QueryResponsePayload::kInt64PayloadFieldNumber;
const int QueryResponsePayload::kDoublePayloadFieldNumber;
const int QueryResponsePayload::kPointPayloadFieldNumber;
const int QueryResponsePayload::kPolygonPayloadFieldNumber;
const int QueryResponsePayload::kStringPayloadFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

QueryResponsePayload::QueryResponsePayload()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_messages_2fQueryResponseMessage_2eproto::scc_info_QueryResponsePayload.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:ColmnarDB.NetworkClient.Message.QueryResponsePayload)
}
QueryResponsePayload::QueryResponsePayload(const QueryResponsePayload& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  clear_has_payload();
  switch (from.payload_case()) {
    case kIntPayload: {
      mutable_intpayload()->::ColmnarDB::NetworkClient::Message::QueryResponseIntPayload::MergeFrom(from.intpayload());
      break;
    }
    case kFloatPayload: {
      mutable_floatpayload()->::ColmnarDB::NetworkClient::Message::QueryResponseFloatPayload::MergeFrom(from.floatpayload());
      break;
    }
    case kInt64Payload: {
      mutable_int64payload()->::ColmnarDB::NetworkClient::Message::QueryResponseInt64Payload::MergeFrom(from.int64payload());
      break;
    }
    case kDoublePayload: {
      mutable_doublepayload()->::ColmnarDB::NetworkClient::Message::QueryResponseDoublePayload::MergeFrom(from.doublepayload());
      break;
    }
    case kPointPayload: {
      mutable_pointpayload()->::ColmnarDB::NetworkClient::Message::QueryResponsePointPayload::MergeFrom(from.pointpayload());
      break;
    }
    case kPolygonPayload: {
      mutable_polygonpayload()->::ColmnarDB::NetworkClient::Message::QueryResponsePolygonPayload::MergeFrom(from.polygonpayload());
      break;
    }
    case kStringPayload: {
      mutable_stringpayload()->::ColmnarDB::NetworkClient::Message::QueryResponseStringPayload::MergeFrom(from.stringpayload());
      break;
    }
    case PAYLOAD_NOT_SET: {
      break;
    }
  }
  // @@protoc_insertion_point(copy_constructor:ColmnarDB.NetworkClient.Message.QueryResponsePayload)
}

void QueryResponsePayload::SharedCtor() {
  clear_has_payload();
}

QueryResponsePayload::~QueryResponsePayload() {
  // @@protoc_insertion_point(destructor:ColmnarDB.NetworkClient.Message.QueryResponsePayload)
  SharedDtor();
}

void QueryResponsePayload::SharedDtor() {
  if (has_payload()) {
    clear_payload();
  }
}

void QueryResponsePayload::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* QueryResponsePayload::descriptor() {
  ::protobuf_messages_2fQueryResponseMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_messages_2fQueryResponseMessage_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const QueryResponsePayload& QueryResponsePayload::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_messages_2fQueryResponseMessage_2eproto::scc_info_QueryResponsePayload.base);
  return *internal_default_instance();
}


void QueryResponsePayload::clear_payload() {
// @@protoc_insertion_point(one_of_clear_start:ColmnarDB.NetworkClient.Message.QueryResponsePayload)
  switch (payload_case()) {
    case kIntPayload: {
      delete payload_.intpayload_;
      break;
    }
    case kFloatPayload: {
      delete payload_.floatpayload_;
      break;
    }
    case kInt64Payload: {
      delete payload_.int64payload_;
      break;
    }
    case kDoublePayload: {
      delete payload_.doublepayload_;
      break;
    }
    case kPointPayload: {
      delete payload_.pointpayload_;
      break;
    }
    case kPolygonPayload: {
      delete payload_.polygonpayload_;
      break;
    }
    case kStringPayload: {
      delete payload_.stringpayload_;
      break;
    }
    case PAYLOAD_NOT_SET: {
      break;
    }
  }
  _oneof_case_[0] = PAYLOAD_NOT_SET;
}


void QueryResponsePayload::Clear() {
// @@protoc_insertion_point(message_clear_start:ColmnarDB.NetworkClient.Message.QueryResponsePayload)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  clear_payload();
  _internal_metadata_.Clear();
}

bool QueryResponsePayload::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ColmnarDB.NetworkClient.Message.QueryResponsePayload)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .ColmnarDB.NetworkClient.Message.QueryResponseIntPayload intPayload = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_intpayload()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .ColmnarDB.NetworkClient.Message.QueryResponseFloatPayload floatPayload = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_floatpayload()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .ColmnarDB.NetworkClient.Message.QueryResponseInt64Payload int64Payload = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_int64payload()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .ColmnarDB.NetworkClient.Message.QueryResponseDoublePayload doublePayload = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_doublepayload()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .ColmnarDB.NetworkClient.Message.QueryResponsePointPayload pointPayload = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 50 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_pointpayload()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .ColmnarDB.NetworkClient.Message.QueryResponsePolygonPayload polygonPayload = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(58u /* 58 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_polygonpayload()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .ColmnarDB.NetworkClient.Message.QueryResponseStringPayload stringPayload = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(66u /* 66 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_stringpayload()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ColmnarDB.NetworkClient.Message.QueryResponsePayload)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ColmnarDB.NetworkClient.Message.QueryResponsePayload)
  return false;
#undef DO_
}

void QueryResponsePayload::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ColmnarDB.NetworkClient.Message.QueryResponsePayload)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .ColmnarDB.NetworkClient.Message.QueryResponseIntPayload intPayload = 2;
  if (has_intpayload()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->_internal_intpayload(), output);
  }

  // .ColmnarDB.NetworkClient.Message.QueryResponseFloatPayload floatPayload = 3;
  if (has_floatpayload()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->_internal_floatpayload(), output);
  }

  // .ColmnarDB.NetworkClient.Message.QueryResponseInt64Payload int64Payload = 4;
  if (has_int64payload()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, this->_internal_int64payload(), output);
  }

  // .ColmnarDB.NetworkClient.Message.QueryResponseDoublePayload doublePayload = 5;
  if (has_doublepayload()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, this->_internal_doublepayload(), output);
  }

  // .ColmnarDB.NetworkClient.Message.QueryResponsePointPayload pointPayload = 6;
  if (has_pointpayload()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      6, this->_internal_pointpayload(), output);
  }

  // .ColmnarDB.NetworkClient.Message.QueryResponsePolygonPayload polygonPayload = 7;
  if (has_polygonpayload()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      7, this->_internal_polygonpayload(), output);
  }

  // .ColmnarDB.NetworkClient.Message.QueryResponseStringPayload stringPayload = 8;
  if (has_stringpayload()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      8, this->_internal_stringpayload(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:ColmnarDB.NetworkClient.Message.QueryResponsePayload)
}

::google::protobuf::uint8* QueryResponsePayload::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:ColmnarDB.NetworkClient.Message.QueryResponsePayload)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .ColmnarDB.NetworkClient.Message.QueryResponseIntPayload intPayload = 2;
  if (has_intpayload()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->_internal_intpayload(), deterministic, target);
  }

  // .ColmnarDB.NetworkClient.Message.QueryResponseFloatPayload floatPayload = 3;
  if (has_floatpayload()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, this->_internal_floatpayload(), deterministic, target);
  }

  // .ColmnarDB.NetworkClient.Message.QueryResponseInt64Payload int64Payload = 4;
  if (has_int64payload()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        4, this->_internal_int64payload(), deterministic, target);
  }

  // .ColmnarDB.NetworkClient.Message.QueryResponseDoublePayload doublePayload = 5;
  if (has_doublepayload()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        5, this->_internal_doublepayload(), deterministic, target);
  }

  // .ColmnarDB.NetworkClient.Message.QueryResponsePointPayload pointPayload = 6;
  if (has_pointpayload()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        6, this->_internal_pointpayload(), deterministic, target);
  }

  // .ColmnarDB.NetworkClient.Message.QueryResponsePolygonPayload polygonPayload = 7;
  if (has_polygonpayload()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        7, this->_internal_polygonpayload(), deterministic, target);
  }

  // .ColmnarDB.NetworkClient.Message.QueryResponseStringPayload stringPayload = 8;
  if (has_stringpayload()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        8, this->_internal_stringpayload(), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ColmnarDB.NetworkClient.Message.QueryResponsePayload)
  return target;
}

size_t QueryResponsePayload::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ColmnarDB.NetworkClient.Message.QueryResponsePayload)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  switch (payload_case()) {
    // .ColmnarDB.NetworkClient.Message.QueryResponseIntPayload intPayload = 2;
    case kIntPayload: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *payload_.intpayload_);
      break;
    }
    // .ColmnarDB.NetworkClient.Message.QueryResponseFloatPayload floatPayload = 3;
    case kFloatPayload: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *payload_.floatpayload_);
      break;
    }
    // .ColmnarDB.NetworkClient.Message.QueryResponseInt64Payload int64Payload = 4;
    case kInt64Payload: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *payload_.int64payload_);
      break;
    }
    // .ColmnarDB.NetworkClient.Message.QueryResponseDoublePayload doublePayload = 5;
    case kDoublePayload: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *payload_.doublepayload_);
      break;
    }
    // .ColmnarDB.NetworkClient.Message.QueryResponsePointPayload pointPayload = 6;
    case kPointPayload: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *payload_.pointpayload_);
      break;
    }
    // .ColmnarDB.NetworkClient.Message.QueryResponsePolygonPayload polygonPayload = 7;
    case kPolygonPayload: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *payload_.polygonpayload_);
      break;
    }
    // .ColmnarDB.NetworkClient.Message.QueryResponseStringPayload stringPayload = 8;
    case kStringPayload: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *payload_.stringpayload_);
      break;
    }
    case PAYLOAD_NOT_SET: {
      break;
    }
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void QueryResponsePayload::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ColmnarDB.NetworkClient.Message.QueryResponsePayload)
  GOOGLE_DCHECK_NE(&from, this);
  const QueryResponsePayload* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const QueryResponsePayload>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ColmnarDB.NetworkClient.Message.QueryResponsePayload)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ColmnarDB.NetworkClient.Message.QueryResponsePayload)
    MergeFrom(*source);
  }
}

void QueryResponsePayload::MergeFrom(const QueryResponsePayload& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ColmnarDB.NetworkClient.Message.QueryResponsePayload)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  switch (from.payload_case()) {
    case kIntPayload: {
      mutable_intpayload()->::ColmnarDB::NetworkClient::Message::QueryResponseIntPayload::MergeFrom(from.intpayload());
      break;
    }
    case kFloatPayload: {
      mutable_floatpayload()->::ColmnarDB::NetworkClient::Message::QueryResponseFloatPayload::MergeFrom(from.floatpayload());
      break;
    }
    case kInt64Payload: {
      mutable_int64payload()->::ColmnarDB::NetworkClient::Message::QueryResponseInt64Payload::MergeFrom(from.int64payload());
      break;
    }
    case kDoublePayload: {
      mutable_doublepayload()->::ColmnarDB::NetworkClient::Message::QueryResponseDoublePayload::MergeFrom(from.doublepayload());
      break;
    }
    case kPointPayload: {
      mutable_pointpayload()->::ColmnarDB::NetworkClient::Message::QueryResponsePointPayload::MergeFrom(from.pointpayload());
      break;
    }
    case kPolygonPayload: {
      mutable_polygonpayload()->::ColmnarDB::NetworkClient::Message::QueryResponsePolygonPayload::MergeFrom(from.polygonpayload());
      break;
    }
    case kStringPayload: {
      mutable_stringpayload()->::ColmnarDB::NetworkClient::Message::QueryResponseStringPayload::MergeFrom(from.stringpayload());
      break;
    }
    case PAYLOAD_NOT_SET: {
      break;
    }
  }
}

void QueryResponsePayload::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ColmnarDB.NetworkClient.Message.QueryResponsePayload)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void QueryResponsePayload::CopyFrom(const QueryResponsePayload& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ColmnarDB.NetworkClient.Message.QueryResponsePayload)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool QueryResponsePayload::IsInitialized() const {
  return true;
}

void QueryResponsePayload::Swap(QueryResponsePayload* other) {
  if (other == this) return;
  InternalSwap(other);
}
void QueryResponsePayload::InternalSwap(QueryResponsePayload* other) {
  using std::swap;
  swap(payload_, other->payload_);
  swap(_oneof_case_[0], other->_oneof_case_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata QueryResponsePayload::GetMetadata() const {
  protobuf_messages_2fQueryResponseMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_messages_2fQueryResponseMessage_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

QueryResponseMessage_PayloadsEntry_DoNotUse::QueryResponseMessage_PayloadsEntry_DoNotUse() {}
QueryResponseMessage_PayloadsEntry_DoNotUse::QueryResponseMessage_PayloadsEntry_DoNotUse(::google::protobuf::Arena* arena) : SuperType(arena) {}
void QueryResponseMessage_PayloadsEntry_DoNotUse::MergeFrom(const QueryResponseMessage_PayloadsEntry_DoNotUse& other) {
  MergeFromInternal(other);
}
::google::protobuf::Metadata QueryResponseMessage_PayloadsEntry_DoNotUse::GetMetadata() const {
  ::protobuf_messages_2fQueryResponseMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_messages_2fQueryResponseMessage_2eproto::file_level_metadata[8];
}
void QueryResponseMessage_PayloadsEntry_DoNotUse::MergeFrom(
    const ::google::protobuf::Message& other) {
  ::google::protobuf::Message::MergeFrom(other);
}


// ===================================================================

QueryResponseMessage_TimingEntry_DoNotUse::QueryResponseMessage_TimingEntry_DoNotUse() {}
QueryResponseMessage_TimingEntry_DoNotUse::QueryResponseMessage_TimingEntry_DoNotUse(::google::protobuf::Arena* arena) : SuperType(arena) {}
void QueryResponseMessage_TimingEntry_DoNotUse::MergeFrom(const QueryResponseMessage_TimingEntry_DoNotUse& other) {
  MergeFromInternal(other);
}
::google::protobuf::Metadata QueryResponseMessage_TimingEntry_DoNotUse::GetMetadata() const {
  ::protobuf_messages_2fQueryResponseMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_messages_2fQueryResponseMessage_2eproto::file_level_metadata[9];
}
void QueryResponseMessage_TimingEntry_DoNotUse::MergeFrom(
    const ::google::protobuf::Message& other) {
  ::google::protobuf::Message::MergeFrom(other);
}


// ===================================================================

void QueryResponseMessage::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int QueryResponseMessage::kPayloadsFieldNumber;
const int QueryResponseMessage::kTimingFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

QueryResponseMessage::QueryResponseMessage()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_messages_2fQueryResponseMessage_2eproto::scc_info_QueryResponseMessage.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:ColmnarDB.NetworkClient.Message.QueryResponseMessage)
}
QueryResponseMessage::QueryResponseMessage(const QueryResponseMessage& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  payloads_.MergeFrom(from.payloads_);
  timing_.MergeFrom(from.timing_);
  // @@protoc_insertion_point(copy_constructor:ColmnarDB.NetworkClient.Message.QueryResponseMessage)
}

void QueryResponseMessage::SharedCtor() {
}

QueryResponseMessage::~QueryResponseMessage() {
  // @@protoc_insertion_point(destructor:ColmnarDB.NetworkClient.Message.QueryResponseMessage)
  SharedDtor();
}

void QueryResponseMessage::SharedDtor() {
}

void QueryResponseMessage::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* QueryResponseMessage::descriptor() {
  ::protobuf_messages_2fQueryResponseMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_messages_2fQueryResponseMessage_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const QueryResponseMessage& QueryResponseMessage::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_messages_2fQueryResponseMessage_2eproto::scc_info_QueryResponseMessage.base);
  return *internal_default_instance();
}


void QueryResponseMessage::Clear() {
// @@protoc_insertion_point(message_clear_start:ColmnarDB.NetworkClient.Message.QueryResponseMessage)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  payloads_.Clear();
  timing_.Clear();
  _internal_metadata_.Clear();
}

bool QueryResponseMessage::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:ColmnarDB.NetworkClient.Message.QueryResponseMessage)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // map<string, .ColmnarDB.NetworkClient.Message.QueryResponsePayload> payloads = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          QueryResponseMessage_PayloadsEntry_DoNotUse::Parser< ::google::protobuf::internal::MapField<
              QueryResponseMessage_PayloadsEntry_DoNotUse,
              ::std::string, ::ColmnarDB::NetworkClient::Message::QueryResponsePayload,
              ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
              ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE,
              0 >,
            ::google::protobuf::Map< ::std::string, ::ColmnarDB::NetworkClient::Message::QueryResponsePayload > > parser(&payloads_);
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
              input, &parser));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            parser.key().data(), static_cast<int>(parser.key().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "ColmnarDB.NetworkClient.Message.QueryResponseMessage.PayloadsEntry.key"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // map<string, float> timing = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          QueryResponseMessage_TimingEntry_DoNotUse::Parser< ::google::protobuf::internal::MapField<
              QueryResponseMessage_TimingEntry_DoNotUse,
              ::std::string, float,
              ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
              ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT,
              0 >,
            ::google::protobuf::Map< ::std::string, float > > parser(&timing_);
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
              input, &parser));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            parser.key().data(), static_cast<int>(parser.key().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "ColmnarDB.NetworkClient.Message.QueryResponseMessage.TimingEntry.key"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:ColmnarDB.NetworkClient.Message.QueryResponseMessage)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:ColmnarDB.NetworkClient.Message.QueryResponseMessage)
  return false;
#undef DO_
}

void QueryResponseMessage::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:ColmnarDB.NetworkClient.Message.QueryResponseMessage)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // map<string, .ColmnarDB.NetworkClient.Message.QueryResponsePayload> payloads = 1;
  if (!this->payloads().empty()) {
    typedef ::google::protobuf::Map< ::std::string, ::ColmnarDB::NetworkClient::Message::QueryResponsePayload >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::google::protobuf::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->first.data(), static_cast<int>(p->first.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "ColmnarDB.NetworkClient.Message.QueryResponseMessage.PayloadsEntry.key");
      }
    };

    if (output->IsSerializationDeterministic() &&
        this->payloads().size() > 1) {
      ::std::unique_ptr<SortItem[]> items(
          new SortItem[this->payloads().size()]);
      typedef ::google::protobuf::Map< ::std::string, ::ColmnarDB::NetworkClient::Message::QueryResponsePayload >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::std::string, ::ColmnarDB::NetworkClient::Message::QueryResponsePayload >::const_iterator
          it = this->payloads().begin();
          it != this->payloads().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::std::unique_ptr<QueryResponseMessage_PayloadsEntry_DoNotUse> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(payloads_.NewEntryWrapper(
            items[static_cast<ptrdiff_t>(i)]->first, items[static_cast<ptrdiff_t>(i)]->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            1, *entry, output);
        Utf8Check::Check(items[static_cast<ptrdiff_t>(i)]);
      }
    } else {
      ::std::unique_ptr<QueryResponseMessage_PayloadsEntry_DoNotUse> entry;
      for (::google::protobuf::Map< ::std::string, ::ColmnarDB::NetworkClient::Message::QueryResponsePayload >::const_iterator
          it = this->payloads().begin();
          it != this->payloads().end(); ++it) {
        entry.reset(payloads_.NewEntryWrapper(
            it->first, it->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            1, *entry, output);
        Utf8Check::Check(&*it);
      }
    }
  }

  // map<string, float> timing = 2;
  if (!this->timing().empty()) {
    typedef ::google::protobuf::Map< ::std::string, float >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::google::protobuf::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->first.data(), static_cast<int>(p->first.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "ColmnarDB.NetworkClient.Message.QueryResponseMessage.TimingEntry.key");
      }
    };

    if (output->IsSerializationDeterministic() &&
        this->timing().size() > 1) {
      ::std::unique_ptr<SortItem[]> items(
          new SortItem[this->timing().size()]);
      typedef ::google::protobuf::Map< ::std::string, float >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::std::string, float >::const_iterator
          it = this->timing().begin();
          it != this->timing().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::std::unique_ptr<QueryResponseMessage_TimingEntry_DoNotUse> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(timing_.NewEntryWrapper(
            items[static_cast<ptrdiff_t>(i)]->first, items[static_cast<ptrdiff_t>(i)]->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            2, *entry, output);
        Utf8Check::Check(items[static_cast<ptrdiff_t>(i)]);
      }
    } else {
      ::std::unique_ptr<QueryResponseMessage_TimingEntry_DoNotUse> entry;
      for (::google::protobuf::Map< ::std::string, float >::const_iterator
          it = this->timing().begin();
          it != this->timing().end(); ++it) {
        entry.reset(timing_.NewEntryWrapper(
            it->first, it->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            2, *entry, output);
        Utf8Check::Check(&*it);
      }
    }
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:ColmnarDB.NetworkClient.Message.QueryResponseMessage)
}

::google::protobuf::uint8* QueryResponseMessage::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:ColmnarDB.NetworkClient.Message.QueryResponseMessage)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // map<string, .ColmnarDB.NetworkClient.Message.QueryResponsePayload> payloads = 1;
  if (!this->payloads().empty()) {
    typedef ::google::protobuf::Map< ::std::string, ::ColmnarDB::NetworkClient::Message::QueryResponsePayload >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::google::protobuf::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->first.data(), static_cast<int>(p->first.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "ColmnarDB.NetworkClient.Message.QueryResponseMessage.PayloadsEntry.key");
      }
    };

    if (deterministic &&
        this->payloads().size() > 1) {
      ::std::unique_ptr<SortItem[]> items(
          new SortItem[this->payloads().size()]);
      typedef ::google::protobuf::Map< ::std::string, ::ColmnarDB::NetworkClient::Message::QueryResponsePayload >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::std::string, ::ColmnarDB::NetworkClient::Message::QueryResponsePayload >::const_iterator
          it = this->payloads().begin();
          it != this->payloads().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::std::unique_ptr<QueryResponseMessage_PayloadsEntry_DoNotUse> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(payloads_.NewEntryWrapper(
            items[static_cast<ptrdiff_t>(i)]->first, items[static_cast<ptrdiff_t>(i)]->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       1, *entry, deterministic, target);
;
        Utf8Check::Check(items[static_cast<ptrdiff_t>(i)]);
      }
    } else {
      ::std::unique_ptr<QueryResponseMessage_PayloadsEntry_DoNotUse> entry;
      for (::google::protobuf::Map< ::std::string, ::ColmnarDB::NetworkClient::Message::QueryResponsePayload >::const_iterator
          it = this->payloads().begin();
          it != this->payloads().end(); ++it) {
        entry.reset(payloads_.NewEntryWrapper(
            it->first, it->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       1, *entry, deterministic, target);
;
        Utf8Check::Check(&*it);
      }
    }
  }

  // map<string, float> timing = 2;
  if (!this->timing().empty()) {
    typedef ::google::protobuf::Map< ::std::string, float >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::google::protobuf::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->first.data(), static_cast<int>(p->first.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "ColmnarDB.NetworkClient.Message.QueryResponseMessage.TimingEntry.key");
      }
    };

    if (deterministic &&
        this->timing().size() > 1) {
      ::std::unique_ptr<SortItem[]> items(
          new SortItem[this->timing().size()]);
      typedef ::google::protobuf::Map< ::std::string, float >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::std::string, float >::const_iterator
          it = this->timing().begin();
          it != this->timing().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::std::unique_ptr<QueryResponseMessage_TimingEntry_DoNotUse> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(timing_.NewEntryWrapper(
            items[static_cast<ptrdiff_t>(i)]->first, items[static_cast<ptrdiff_t>(i)]->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       2, *entry, deterministic, target);
;
        Utf8Check::Check(items[static_cast<ptrdiff_t>(i)]);
      }
    } else {
      ::std::unique_ptr<QueryResponseMessage_TimingEntry_DoNotUse> entry;
      for (::google::protobuf::Map< ::std::string, float >::const_iterator
          it = this->timing().begin();
          it != this->timing().end(); ++it) {
        entry.reset(timing_.NewEntryWrapper(
            it->first, it->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       2, *entry, deterministic, target);
;
        Utf8Check::Check(&*it);
      }
    }
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ColmnarDB.NetworkClient.Message.QueryResponseMessage)
  return target;
}

size_t QueryResponseMessage::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ColmnarDB.NetworkClient.Message.QueryResponseMessage)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // map<string, .ColmnarDB.NetworkClient.Message.QueryResponsePayload> payloads = 1;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->payloads_size());
  {
    ::std::unique_ptr<QueryResponseMessage_PayloadsEntry_DoNotUse> entry;
    for (::google::protobuf::Map< ::std::string, ::ColmnarDB::NetworkClient::Message::QueryResponsePayload >::const_iterator
        it = this->payloads().begin();
        it != this->payloads().end(); ++it) {
      entry.reset(payloads_.NewEntryWrapper(it->first, it->second));
      total_size += ::google::protobuf::internal::WireFormatLite::
          MessageSizeNoVirtual(*entry);
    }
  }

  // map<string, float> timing = 2;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->timing_size());
  {
    ::std::unique_ptr<QueryResponseMessage_TimingEntry_DoNotUse> entry;
    for (::google::protobuf::Map< ::std::string, float >::const_iterator
        it = this->timing().begin();
        it != this->timing().end(); ++it) {
      entry.reset(timing_.NewEntryWrapper(it->first, it->second));
      total_size += ::google::protobuf::internal::WireFormatLite::
          MessageSizeNoVirtual(*entry);
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void QueryResponseMessage::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ColmnarDB.NetworkClient.Message.QueryResponseMessage)
  GOOGLE_DCHECK_NE(&from, this);
  const QueryResponseMessage* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const QueryResponseMessage>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ColmnarDB.NetworkClient.Message.QueryResponseMessage)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ColmnarDB.NetworkClient.Message.QueryResponseMessage)
    MergeFrom(*source);
  }
}

void QueryResponseMessage::MergeFrom(const QueryResponseMessage& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ColmnarDB.NetworkClient.Message.QueryResponseMessage)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  payloads_.MergeFrom(from.payloads_);
  timing_.MergeFrom(from.timing_);
}

void QueryResponseMessage::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ColmnarDB.NetworkClient.Message.QueryResponseMessage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void QueryResponseMessage::CopyFrom(const QueryResponseMessage& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ColmnarDB.NetworkClient.Message.QueryResponseMessage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool QueryResponseMessage::IsInitialized() const {
  return true;
}

void QueryResponseMessage::Swap(QueryResponseMessage* other) {
  if (other == this) return;
  InternalSwap(other);
}
void QueryResponseMessage::InternalSwap(QueryResponseMessage* other) {
  using std::swap;
  payloads_.Swap(&other->payloads_);
  timing_.Swap(&other->timing_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata QueryResponseMessage::GetMetadata() const {
  protobuf_messages_2fQueryResponseMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_messages_2fQueryResponseMessage_2eproto::file_level_metadata[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace Message
}  // namespace NetworkClient
}  // namespace ColmnarDB
namespace google {
namespace protobuf {
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::ColmnarDB::NetworkClient::Message::QueryResponseIntPayload* Arena::CreateMaybeMessage< ::ColmnarDB::NetworkClient::Message::QueryResponseIntPayload >(Arena* arena) {
  return Arena::CreateInternal< ::ColmnarDB::NetworkClient::Message::QueryResponseIntPayload >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::ColmnarDB::NetworkClient::Message::QueryResponseInt64Payload* Arena::CreateMaybeMessage< ::ColmnarDB::NetworkClient::Message::QueryResponseInt64Payload >(Arena* arena) {
  return Arena::CreateInternal< ::ColmnarDB::NetworkClient::Message::QueryResponseInt64Payload >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::ColmnarDB::NetworkClient::Message::QueryResponseFloatPayload* Arena::CreateMaybeMessage< ::ColmnarDB::NetworkClient::Message::QueryResponseFloatPayload >(Arena* arena) {
  return Arena::CreateInternal< ::ColmnarDB::NetworkClient::Message::QueryResponseFloatPayload >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::ColmnarDB::NetworkClient::Message::QueryResponseDoublePayload* Arena::CreateMaybeMessage< ::ColmnarDB::NetworkClient::Message::QueryResponseDoublePayload >(Arena* arena) {
  return Arena::CreateInternal< ::ColmnarDB::NetworkClient::Message::QueryResponseDoublePayload >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::ColmnarDB::NetworkClient::Message::QueryResponsePolygonPayload* Arena::CreateMaybeMessage< ::ColmnarDB::NetworkClient::Message::QueryResponsePolygonPayload >(Arena* arena) {
  return Arena::CreateInternal< ::ColmnarDB::NetworkClient::Message::QueryResponsePolygonPayload >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::ColmnarDB::NetworkClient::Message::QueryResponsePointPayload* Arena::CreateMaybeMessage< ::ColmnarDB::NetworkClient::Message::QueryResponsePointPayload >(Arena* arena) {
  return Arena::CreateInternal< ::ColmnarDB::NetworkClient::Message::QueryResponsePointPayload >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::ColmnarDB::NetworkClient::Message::QueryResponseStringPayload* Arena::CreateMaybeMessage< ::ColmnarDB::NetworkClient::Message::QueryResponseStringPayload >(Arena* arena) {
  return Arena::CreateInternal< ::ColmnarDB::NetworkClient::Message::QueryResponseStringPayload >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::ColmnarDB::NetworkClient::Message::QueryResponsePayload* Arena::CreateMaybeMessage< ::ColmnarDB::NetworkClient::Message::QueryResponsePayload >(Arena* arena) {
  return Arena::CreateInternal< ::ColmnarDB::NetworkClient::Message::QueryResponsePayload >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::ColmnarDB::NetworkClient::Message::QueryResponseMessage_PayloadsEntry_DoNotUse* Arena::CreateMaybeMessage< ::ColmnarDB::NetworkClient::Message::QueryResponseMessage_PayloadsEntry_DoNotUse >(Arena* arena) {
  return Arena::CreateInternal< ::ColmnarDB::NetworkClient::Message::QueryResponseMessage_PayloadsEntry_DoNotUse >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::ColmnarDB::NetworkClient::Message::QueryResponseMessage_TimingEntry_DoNotUse* Arena::CreateMaybeMessage< ::ColmnarDB::NetworkClient::Message::QueryResponseMessage_TimingEntry_DoNotUse >(Arena* arena) {
  return Arena::CreateInternal< ::ColmnarDB::NetworkClient::Message::QueryResponseMessage_TimingEntry_DoNotUse >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::ColmnarDB::NetworkClient::Message::QueryResponseMessage* Arena::CreateMaybeMessage< ::ColmnarDB::NetworkClient::Message::QueryResponseMessage >(Arena* arena) {
  return Arena::CreateInternal< ::ColmnarDB::NetworkClient::Message::QueryResponseMessage >(arena);
}
}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)
