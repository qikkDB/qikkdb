// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: messages/BulkImportMessage.proto

#include "messages/BulkImportMessage.pb.h"

#include <algorithm>

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
namespace ColmnarDB {
namespace NetworkClient {
namespace Message {
class BulkImportMessageDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<BulkImportMessage> _instance;
} _BulkImportMessage_default_instance_;
}  // namespace Message
}  // namespace NetworkClient
}  // namespace ColmnarDB
static void InitDefaultsscc_info_BulkImportMessage_messages_2fBulkImportMessage_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::ColmnarDB::NetworkClient::Message::_BulkImportMessage_default_instance_;
    new (ptr) ::ColmnarDB::NetworkClient::Message::BulkImportMessage();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::ColmnarDB::NetworkClient::Message::BulkImportMessage::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_BulkImportMessage_messages_2fBulkImportMessage_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_BulkImportMessage_messages_2fBulkImportMessage_2eproto}, {}};

static ::PROTOBUF_NAMESPACE_ID::Metadata file_level_metadata_messages_2fBulkImportMessage_2eproto[1];
static constexpr ::PROTOBUF_NAMESPACE_ID::EnumDescriptor const** file_level_enum_descriptors_messages_2fBulkImportMessage_2eproto = nullptr;
static constexpr ::PROTOBUF_NAMESPACE_ID::ServiceDescriptor const** file_level_service_descriptors_messages_2fBulkImportMessage_2eproto = nullptr;

const ::PROTOBUF_NAMESPACE_ID::uint32 TableStruct_messages_2fBulkImportMessage_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::ColmnarDB::NetworkClient::Message::BulkImportMessage, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::ColmnarDB::NetworkClient::Message::BulkImportMessage, tablename_),
  PROTOBUF_FIELD_OFFSET(::ColmnarDB::NetworkClient::Message::BulkImportMessage, columnname_),
  PROTOBUF_FIELD_OFFSET(::ColmnarDB::NetworkClient::Message::BulkImportMessage, columntype_),
  PROTOBUF_FIELD_OFFSET(::ColmnarDB::NetworkClient::Message::BulkImportMessage, columnexternaltype_),
  PROTOBUF_FIELD_OFFSET(::ColmnarDB::NetworkClient::Message::BulkImportMessage, elemcount_),
  PROTOBUF_FIELD_OFFSET(::ColmnarDB::NetworkClient::Message::BulkImportMessage, nullmasklen_),
  PROTOBUF_FIELD_OFFSET(::ColmnarDB::NetworkClient::Message::BulkImportMessage, datalength_),
};
static const ::PROTOBUF_NAMESPACE_ID::internal::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::ColmnarDB::NetworkClient::Message::BulkImportMessage)},
};

static ::PROTOBUF_NAMESPACE_ID::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::ColmnarDB::NetworkClient::Message::_BulkImportMessage_default_instance_),
};

const char descriptor_table_protodef_messages_2fBulkImportMessage_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) =
  "\n messages/BulkImportMessage.proto\022\037Colm"
  "narDB.NetworkClient.Message\032\037messages/CS"
  "VImportMessage.proto\"\204\002\n\021BulkImportMessa"
  "ge\022\021\n\tTableName\030\001 \001(\t\022\022\n\nColumnName\030\002 \001("
  "\t\022=\n\nColumnType\030\003 \001(\0162).ColmnarDB.Networ"
  "kClient.Message.DataType\022M\n\022ColumnExtern"
  "alType\030\004 \001(\01621.ColmnarDB.NetworkClient.M"
  "essage.DataTypeExternal\022\021\n\tElemCount\030\005 \001"
  "(\005\022\023\n\013nullMaskLen\030\006 \001(\005\022\022\n\ndataLength\030\007 "
  "\001(\005b\006proto3"
  ;
static const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable*const descriptor_table_messages_2fBulkImportMessage_2eproto_deps[1] = {
  &::descriptor_table_messages_2fCSVImportMessage_2eproto,
};
static ::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase*const descriptor_table_messages_2fBulkImportMessage_2eproto_sccs[1] = {
  &scc_info_BulkImportMessage_messages_2fBulkImportMessage_2eproto.base,
};
static ::PROTOBUF_NAMESPACE_ID::internal::once_flag descriptor_table_messages_2fBulkImportMessage_2eproto_once;
static bool descriptor_table_messages_2fBulkImportMessage_2eproto_initialized = false;
const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_messages_2fBulkImportMessage_2eproto = {
  &descriptor_table_messages_2fBulkImportMessage_2eproto_initialized, descriptor_table_protodef_messages_2fBulkImportMessage_2eproto, "messages/BulkImportMessage.proto", 371,
  &descriptor_table_messages_2fBulkImportMessage_2eproto_once, descriptor_table_messages_2fBulkImportMessage_2eproto_sccs, descriptor_table_messages_2fBulkImportMessage_2eproto_deps, 1, 1,
  schemas, file_default_instances, TableStruct_messages_2fBulkImportMessage_2eproto::offsets,
  file_level_metadata_messages_2fBulkImportMessage_2eproto, 1, file_level_enum_descriptors_messages_2fBulkImportMessage_2eproto, file_level_service_descriptors_messages_2fBulkImportMessage_2eproto,
};

// Force running AddDescriptors() at dynamic initialization time.
static bool dynamic_init_dummy_messages_2fBulkImportMessage_2eproto = (  ::PROTOBUF_NAMESPACE_ID::internal::AddDescriptors(&descriptor_table_messages_2fBulkImportMessage_2eproto), true);
namespace ColmnarDB {
namespace NetworkClient {
namespace Message {

// ===================================================================

void BulkImportMessage::InitAsDefaultInstance() {
}
class BulkImportMessage::_Internal {
 public:
};

BulkImportMessage::BulkImportMessage()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:ColmnarDB.NetworkClient.Message.BulkImportMessage)
}
BulkImportMessage::BulkImportMessage(const BulkImportMessage& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  tablename_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_tablename().empty()) {
    tablename_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.tablename_);
  }
  columnname_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_columnname().empty()) {
    columnname_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.columnname_);
  }
  ::memcpy(&columntype_, &from.columntype_,
    static_cast<size_t>(reinterpret_cast<char*>(&datalength_) -
    reinterpret_cast<char*>(&columntype_)) + sizeof(datalength_));
  // @@protoc_insertion_point(copy_constructor:ColmnarDB.NetworkClient.Message.BulkImportMessage)
}

void BulkImportMessage::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_BulkImportMessage_messages_2fBulkImportMessage_2eproto.base);
  tablename_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  columnname_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  ::memset(&columntype_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&datalength_) -
      reinterpret_cast<char*>(&columntype_)) + sizeof(datalength_));
}

BulkImportMessage::~BulkImportMessage() {
  // @@protoc_insertion_point(destructor:ColmnarDB.NetworkClient.Message.BulkImportMessage)
  SharedDtor();
}

void BulkImportMessage::SharedDtor() {
  tablename_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  columnname_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void BulkImportMessage::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const BulkImportMessage& BulkImportMessage::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_BulkImportMessage_messages_2fBulkImportMessage_2eproto.base);
  return *internal_default_instance();
}


void BulkImportMessage::Clear() {
// @@protoc_insertion_point(message_clear_start:ColmnarDB.NetworkClient.Message.BulkImportMessage)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  tablename_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  columnname_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  ::memset(&columntype_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&datalength_) -
      reinterpret_cast<char*>(&columntype_)) + sizeof(datalength_));
  _internal_metadata_.Clear();
}

const char* BulkImportMessage::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string TableName = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParserUTF8(_internal_mutable_tablename(), ptr, ctx, "ColmnarDB.NetworkClient.Message.BulkImportMessage.TableName");
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string ColumnName = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParserUTF8(_internal_mutable_columnname(), ptr, ctx, "ColmnarDB.NetworkClient.Message.BulkImportMessage.ColumnName");
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .ColmnarDB.NetworkClient.Message.DataType ColumnType = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 24)) {
          ::PROTOBUF_NAMESPACE_ID::uint64 val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
          _internal_set_columntype(static_cast<::ColmnarDB::NetworkClient::Message::DataType>(val));
        } else goto handle_unusual;
        continue;
      // .ColmnarDB.NetworkClient.Message.DataTypeExternal ColumnExternalType = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 32)) {
          ::PROTOBUF_NAMESPACE_ID::uint64 val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
          _internal_set_columnexternaltype(static_cast<::ColmnarDB::NetworkClient::Message::DataTypeExternal>(val));
        } else goto handle_unusual;
        continue;
      // int32 ElemCount = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 40)) {
          elemcount_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int32 nullMaskLen = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 48)) {
          nullmasklen_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int32 dataLength = 7;
      case 7:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 56)) {
          datalength_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* BulkImportMessage::InternalSerializeWithCachedSizesToArray(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:ColmnarDB.NetworkClient.Message.BulkImportMessage)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string TableName = 1;
  if (this->tablename().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_tablename().data(), static_cast<int>(this->_internal_tablename().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "ColmnarDB.NetworkClient.Message.BulkImportMessage.TableName");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_tablename(), target);
  }

  // string ColumnName = 2;
  if (this->columnname().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_columnname().data(), static_cast<int>(this->_internal_columnname().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "ColmnarDB.NetworkClient.Message.BulkImportMessage.ColumnName");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_columnname(), target);
  }

  // .ColmnarDB.NetworkClient.Message.DataType ColumnType = 3;
  if (this->columntype() != 0) {
    stream->EnsureSpace(&target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      3, this->_internal_columntype(), target);
  }

  // .ColmnarDB.NetworkClient.Message.DataTypeExternal ColumnExternalType = 4;
  if (this->columnexternaltype() != 0) {
    stream->EnsureSpace(&target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      4, this->_internal_columnexternaltype(), target);
  }

  // int32 ElemCount = 5;
  if (this->elemcount() != 0) {
    stream->EnsureSpace(&target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(5, this->_internal_elemcount(), target);
  }

  // int32 nullMaskLen = 6;
  if (this->nullmasklen() != 0) {
    stream->EnsureSpace(&target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(6, this->_internal_nullmasklen(), target);
  }

  // int32 dataLength = 7;
  if (this->datalength() != 0) {
    stream->EnsureSpace(&target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(7, this->_internal_datalength(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:ColmnarDB.NetworkClient.Message.BulkImportMessage)
  return target;
}

size_t BulkImportMessage::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:ColmnarDB.NetworkClient.Message.BulkImportMessage)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string TableName = 1;
  if (this->tablename().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_tablename());
  }

  // string ColumnName = 2;
  if (this->columnname().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_columnname());
  }

  // .ColmnarDB.NetworkClient.Message.DataType ColumnType = 3;
  if (this->columntype() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->_internal_columntype());
  }

  // .ColmnarDB.NetworkClient.Message.DataTypeExternal ColumnExternalType = 4;
  if (this->columnexternaltype() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->_internal_columnexternaltype());
  }

  // int32 ElemCount = 5;
  if (this->elemcount() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_elemcount());
  }

  // int32 nullMaskLen = 6;
  if (this->nullmasklen() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_nullmasklen());
  }

  // int32 dataLength = 7;
  if (this->datalength() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_datalength());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void BulkImportMessage::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:ColmnarDB.NetworkClient.Message.BulkImportMessage)
  GOOGLE_DCHECK_NE(&from, this);
  const BulkImportMessage* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<BulkImportMessage>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:ColmnarDB.NetworkClient.Message.BulkImportMessage)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:ColmnarDB.NetworkClient.Message.BulkImportMessage)
    MergeFrom(*source);
  }
}

void BulkImportMessage::MergeFrom(const BulkImportMessage& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:ColmnarDB.NetworkClient.Message.BulkImportMessage)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.tablename().size() > 0) {

    tablename_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.tablename_);
  }
  if (from.columnname().size() > 0) {

    columnname_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.columnname_);
  }
  if (from.columntype() != 0) {
    _internal_set_columntype(from._internal_columntype());
  }
  if (from.columnexternaltype() != 0) {
    _internal_set_columnexternaltype(from._internal_columnexternaltype());
  }
  if (from.elemcount() != 0) {
    _internal_set_elemcount(from._internal_elemcount());
  }
  if (from.nullmasklen() != 0) {
    _internal_set_nullmasklen(from._internal_nullmasklen());
  }
  if (from.datalength() != 0) {
    _internal_set_datalength(from._internal_datalength());
  }
}

void BulkImportMessage::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:ColmnarDB.NetworkClient.Message.BulkImportMessage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void BulkImportMessage::CopyFrom(const BulkImportMessage& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ColmnarDB.NetworkClient.Message.BulkImportMessage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool BulkImportMessage::IsInitialized() const {
  return true;
}

void BulkImportMessage::InternalSwap(BulkImportMessage* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  tablename_.Swap(&other->tablename_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  columnname_.Swap(&other->columnname_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(columntype_, other->columntype_);
  swap(columnexternaltype_, other->columnexternaltype_);
  swap(elemcount_, other->elemcount_);
  swap(nullmasklen_, other->nullmasklen_);
  swap(datalength_, other->datalength_);
}

::PROTOBUF_NAMESPACE_ID::Metadata BulkImportMessage::GetMetadata() const {
  return GetMetadataStatic();
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace Message
}  // namespace NetworkClient
}  // namespace ColmnarDB
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::ColmnarDB::NetworkClient::Message::BulkImportMessage* Arena::CreateMaybeMessage< ::ColmnarDB::NetworkClient::Message::BulkImportMessage >(Arena* arena) {
  return Arena::CreateInternal< ::ColmnarDB::NetworkClient::Message::BulkImportMessage >(arena);
}
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
