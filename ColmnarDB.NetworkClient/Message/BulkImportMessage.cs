// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: Message/BulkImportMessage.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace ColmnarDB.NetworkClient.Message {

  /// <summary>Holder for reflection information generated from Message/BulkImportMessage.proto</summary>
  public static partial class BulkImportMessageReflection {

    #region Descriptor
    /// <summary>File descriptor for Message/BulkImportMessage.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static BulkImportMessageReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "Ch9NZXNzYWdlL0J1bGtJbXBvcnRNZXNzYWdlLnByb3RvEh9Db2xtbmFyREIu",
            "TmV0d29ya0NsaWVudC5NZXNzYWdlGh5NZXNzYWdlL0NTVkltcG9ydE1lc3Nh",
            "Z2UucHJvdG8ihAIKEUJ1bGtJbXBvcnRNZXNzYWdlEhEKCVRhYmxlTmFtZRgB",
            "IAEoCRISCgpDb2x1bW5OYW1lGAIgASgJEj0KCkNvbHVtblR5cGUYAyABKA4y",
            "KS5Db2xtbmFyREIuTmV0d29ya0NsaWVudC5NZXNzYWdlLkRhdGFUeXBlEk0K",
            "EkNvbHVtbkV4dGVybmFsVHlwZRgEIAEoDjIxLkNvbG1uYXJEQi5OZXR3b3Jr",
            "Q2xpZW50Lk1lc3NhZ2UuRGF0YVR5cGVFeHRlcm5hbBIRCglFbGVtQ291bnQY",
            "BSABKAUSEwoLbnVsbE1hc2tMZW4YBiABKAUSEgoKZGF0YUxlbmd0aBgHIAEo",
            "BWIGcHJvdG8z"));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::ColmnarDB.NetworkClient.Message.CSVImportMessageReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::ColmnarDB.NetworkClient.Message.BulkImportMessage), global::ColmnarDB.NetworkClient.Message.BulkImportMessage.Parser, new[]{ "TableName", "ColumnName", "ColumnType", "ColumnExternalType", "ElemCount", "NullMaskLen", "DataLength" }, null, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  public sealed partial class BulkImportMessage : pb::IMessage<BulkImportMessage> {
    private static readonly pb::MessageParser<BulkImportMessage> _parser = new pb::MessageParser<BulkImportMessage>(() => new BulkImportMessage());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<BulkImportMessage> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::ColmnarDB.NetworkClient.Message.BulkImportMessageReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BulkImportMessage() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BulkImportMessage(BulkImportMessage other) : this() {
      tableName_ = other.tableName_;
      columnName_ = other.columnName_;
      columnType_ = other.columnType_;
      columnExternalType_ = other.columnExternalType_;
      elemCount_ = other.elemCount_;
      nullMaskLen_ = other.nullMaskLen_;
      dataLength_ = other.dataLength_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BulkImportMessage Clone() {
      return new BulkImportMessage(this);
    }

    /// <summary>Field number for the "TableName" field.</summary>
    public const int TableNameFieldNumber = 1;
    private string tableName_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string TableName {
      get { return tableName_; }
      set {
        tableName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "ColumnName" field.</summary>
    public const int ColumnNameFieldNumber = 2;
    private string columnName_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ColumnName {
      get { return columnName_; }
      set {
        columnName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "ColumnType" field.</summary>
    public const int ColumnTypeFieldNumber = 3;
    private global::ColmnarDB.NetworkClient.Message.DataType columnType_ = global::ColmnarDB.NetworkClient.Message.DataType.ConstInt;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::ColmnarDB.NetworkClient.Message.DataType ColumnType {
      get { return columnType_; }
      set {
        columnType_ = value;
      }
    }

    /// <summary>Field number for the "ColumnExternalType" field.</summary>
    public const int ColumnExternalTypeFieldNumber = 4;
    private global::ColmnarDB.NetworkClient.Message.DataTypeExternal columnExternalType_ = global::ColmnarDB.NetworkClient.Message.DataTypeExternal.ConstIntEx;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::ColmnarDB.NetworkClient.Message.DataTypeExternal ColumnExternalType {
      get { return columnExternalType_; }
      set {
        columnExternalType_ = value;
      }
    }

    /// <summary>Field number for the "ElemCount" field.</summary>
    public const int ElemCountFieldNumber = 5;
    private int elemCount_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int ElemCount {
      get { return elemCount_; }
      set {
        elemCount_ = value;
      }
    }

    /// <summary>Field number for the "nullMaskLen" field.</summary>
    public const int NullMaskLenFieldNumber = 6;
    private int nullMaskLen_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int NullMaskLen {
      get { return nullMaskLen_; }
      set {
        nullMaskLen_ = value;
      }
    }

    /// <summary>Field number for the "dataLength" field.</summary>
    public const int DataLengthFieldNumber = 7;
    private int dataLength_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int DataLength {
      get { return dataLength_; }
      set {
        dataLength_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as BulkImportMessage);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(BulkImportMessage other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (TableName != other.TableName) return false;
      if (ColumnName != other.ColumnName) return false;
      if (ColumnType != other.ColumnType) return false;
      if (ColumnExternalType != other.ColumnExternalType) return false;
      if (ElemCount != other.ElemCount) return false;
      if (NullMaskLen != other.NullMaskLen) return false;
      if (DataLength != other.DataLength) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (TableName.Length != 0) hash ^= TableName.GetHashCode();
      if (ColumnName.Length != 0) hash ^= ColumnName.GetHashCode();
      if (ColumnType != global::ColmnarDB.NetworkClient.Message.DataType.ConstInt) hash ^= ColumnType.GetHashCode();
      if (ColumnExternalType != global::ColmnarDB.NetworkClient.Message.DataTypeExternal.ConstIntEx) hash ^= ColumnExternalType.GetHashCode();
      if (ElemCount != 0) hash ^= ElemCount.GetHashCode();
      if (NullMaskLen != 0) hash ^= NullMaskLen.GetHashCode();
      if (DataLength != 0) hash ^= DataLength.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (TableName.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(TableName);
      }
      if (ColumnName.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(ColumnName);
      }
      if (ColumnType != global::ColmnarDB.NetworkClient.Message.DataType.ConstInt) {
        output.WriteRawTag(24);
        output.WriteEnum((int) ColumnType);
      }
      if (ColumnExternalType != global::ColmnarDB.NetworkClient.Message.DataTypeExternal.ConstIntEx) {
        output.WriteRawTag(32);
        output.WriteEnum((int) ColumnExternalType);
      }
      if (ElemCount != 0) {
        output.WriteRawTag(40);
        output.WriteInt32(ElemCount);
      }
      if (NullMaskLen != 0) {
        output.WriteRawTag(48);
        output.WriteInt32(NullMaskLen);
      }
      if (DataLength != 0) {
        output.WriteRawTag(56);
        output.WriteInt32(DataLength);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (TableName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(TableName);
      }
      if (ColumnName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ColumnName);
      }
      if (ColumnType != global::ColmnarDB.NetworkClient.Message.DataType.ConstInt) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) ColumnType);
      }
      if (ColumnExternalType != global::ColmnarDB.NetworkClient.Message.DataTypeExternal.ConstIntEx) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) ColumnExternalType);
      }
      if (ElemCount != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(ElemCount);
      }
      if (NullMaskLen != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(NullMaskLen);
      }
      if (DataLength != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(DataLength);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(BulkImportMessage other) {
      if (other == null) {
        return;
      }
      if (other.TableName.Length != 0) {
        TableName = other.TableName;
      }
      if (other.ColumnName.Length != 0) {
        ColumnName = other.ColumnName;
      }
      if (other.ColumnType != global::ColmnarDB.NetworkClient.Message.DataType.ConstInt) {
        ColumnType = other.ColumnType;
      }
      if (other.ColumnExternalType != global::ColmnarDB.NetworkClient.Message.DataTypeExternal.ConstIntEx) {
        ColumnExternalType = other.ColumnExternalType;
      }
      if (other.ElemCount != 0) {
        ElemCount = other.ElemCount;
      }
      if (other.NullMaskLen != 0) {
        NullMaskLen = other.NullMaskLen;
      }
      if (other.DataLength != 0) {
        DataLength = other.DataLength;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            TableName = input.ReadString();
            break;
          }
          case 18: {
            ColumnName = input.ReadString();
            break;
          }
          case 24: {
            ColumnType = (global::ColmnarDB.NetworkClient.Message.DataType) input.ReadEnum();
            break;
          }
          case 32: {
            ColumnExternalType = (global::ColmnarDB.NetworkClient.Message.DataTypeExternal) input.ReadEnum();
            break;
          }
          case 40: {
            ElemCount = input.ReadInt32();
            break;
          }
          case 48: {
            NullMaskLen = input.ReadInt32();
            break;
          }
          case 56: {
            DataLength = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
