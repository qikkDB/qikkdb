// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: Message/QueryResponseMessage.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace ColmnarDB.NetworkClient.Message {

  /// <summary>Holder for reflection information generated from Message/QueryResponseMessage.proto</summary>
  public static partial class QueryResponseMessageReflection {

    #region Descriptor
    /// <summary>File descriptor for Message/QueryResponseMessage.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static QueryResponseMessageReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "CiJNZXNzYWdlL1F1ZXJ5UmVzcG9uc2VNZXNzYWdlLnByb3RvEh9Db2xtbmFy",
            "REIuTmV0d29ya0NsaWVudC5NZXNzYWdlGhpUeXBlcy9Db21wbGV4UG9seWdv",
            "bi5wcm90bxoRVHlwZXMvUG9pbnQucHJvdG8iKgoXUXVlcnlSZXNwb25zZUlu",
            "dFBheWxvYWQSDwoHaW50RGF0YRgBIAMoBSIuChlRdWVyeVJlc3BvbnNlSW50",
            "NjRQYXlsb2FkEhEKCWludDY0RGF0YRgBIAMoAyI0ChxRdWVyeVJlc3BvbnNl",
            "RGF0ZVRpbWVQYXlsb2FkEhQKDGRhdGVUaW1lRGF0YRgBIAMoAyIuChlRdWVy",
            "eVJlc3BvbnNlRmxvYXRQYXlsb2FkEhEKCWZsb2F0RGF0YRgBIAMoAiIwChpR",
            "dWVyeVJlc3BvbnNlRG91YmxlUGF5bG9hZBISCgpkb3VibGVEYXRhGAEgAygB",
            "IlMKG1F1ZXJ5UmVzcG9uc2VQb2x5Z29uUGF5bG9hZBI0Cgtwb2x5Z29uRGF0",
            "YRgBIAMoCzIfLkNvbG1uYXJEQi5UeXBlcy5Db21wbGV4UG9seWdvbiJGChlR",
            "dWVyeVJlc3BvbnNlUG9pbnRQYXlsb2FkEikKCXBvaW50RGF0YRgBIAMoCzIW",
            "LkNvbG1uYXJEQi5UeXBlcy5Qb2ludCIwChpRdWVyeVJlc3BvbnNlU3RyaW5n",
            "UGF5bG9hZBISCgpzdHJpbmdEYXRhGAEgAygJIigKFFF1ZXJ5TnVsbG1hc2tQ",
            "YXlsb2FkEhAKCG51bGxNYXNrGAEgAygEIssFChRRdWVyeVJlc3BvbnNlUGF5",
            "bG9hZBJOCgppbnRQYXlsb2FkGAIgASgLMjguQ29sbW5hckRCLk5ldHdvcmtD",
            "bGllbnQuTWVzc2FnZS5RdWVyeVJlc3BvbnNlSW50UGF5bG9hZEgAElIKDGZs",
            "b2F0UGF5bG9hZBgDIAEoCzI6LkNvbG1uYXJEQi5OZXR3b3JrQ2xpZW50Lk1l",
            "c3NhZ2UuUXVlcnlSZXNwb25zZUZsb2F0UGF5bG9hZEgAElIKDGludDY0UGF5",
            "bG9hZBgEIAEoCzI6LkNvbG1uYXJEQi5OZXR3b3JrQ2xpZW50Lk1lc3NhZ2Uu",
            "UXVlcnlSZXNwb25zZUludDY0UGF5bG9hZEgAElQKDWRvdWJsZVBheWxvYWQY",
            "BSABKAsyOy5Db2xtbmFyREIuTmV0d29ya0NsaWVudC5NZXNzYWdlLlF1ZXJ5",
            "UmVzcG9uc2VEb3VibGVQYXlsb2FkSAASUgoMcG9pbnRQYXlsb2FkGAYgASgL",
            "MjouQ29sbW5hckRCLk5ldHdvcmtDbGllbnQuTWVzc2FnZS5RdWVyeVJlc3Bv",
            "bnNlUG9pbnRQYXlsb2FkSAASVgoOcG9seWdvblBheWxvYWQYByABKAsyPC5D",
            "b2xtbmFyREIuTmV0d29ya0NsaWVudC5NZXNzYWdlLlF1ZXJ5UmVzcG9uc2VQ",
            "b2x5Z29uUGF5bG9hZEgAElQKDXN0cmluZ1BheWxvYWQYCCABKAsyOy5Db2xt",
            "bmFyREIuTmV0d29ya0NsaWVudC5NZXNzYWdlLlF1ZXJ5UmVzcG9uc2VTdHJp",
            "bmdQYXlsb2FkSAASWAoPZGF0ZVRpbWVQYXlsb2FkGAkgASgLMj0uQ29sbW5h",
            "ckRCLk5ldHdvcmtDbGllbnQuTWVzc2FnZS5RdWVyeVJlc3BvbnNlRGF0ZVRp",
            "bWVQYXlsb2FkSABCCQoHcGF5bG9hZCK3BAoUUXVlcnlSZXNwb25zZU1lc3Nh",
            "Z2USVQoIcGF5bG9hZHMYASADKAsyQy5Db2xtbmFyREIuTmV0d29ya0NsaWVu",
            "dC5NZXNzYWdlLlF1ZXJ5UmVzcG9uc2VNZXNzYWdlLlBheWxvYWRzRW50cnkS",
            "XQoMbnVsbEJpdE1hc2tzGAMgAygLMkcuQ29sbW5hckRCLk5ldHdvcmtDbGll",
            "bnQuTWVzc2FnZS5RdWVyeVJlc3BvbnNlTWVzc2FnZS5OdWxsQml0TWFza3NF",
            "bnRyeRJRCgZ0aW1pbmcYAiADKAsyQS5Db2xtbmFyREIuTmV0d29ya0NsaWVu",
            "dC5NZXNzYWdlLlF1ZXJ5UmVzcG9uc2VNZXNzYWdlLlRpbWluZ0VudHJ5EhMK",
            "C2NvbHVtbk9yZGVyGAQgAygJGmYKDVBheWxvYWRzRW50cnkSCwoDa2V5GAEg",
            "ASgJEkQKBXZhbHVlGAIgASgLMjUuQ29sbW5hckRCLk5ldHdvcmtDbGllbnQu",
            "TWVzc2FnZS5RdWVyeVJlc3BvbnNlUGF5bG9hZDoCOAEaagoRTnVsbEJpdE1h",
            "c2tzRW50cnkSCwoDa2V5GAEgASgJEkQKBXZhbHVlGAIgASgLMjUuQ29sbW5h",
            "ckRCLk5ldHdvcmtDbGllbnQuTWVzc2FnZS5RdWVyeU51bGxtYXNrUGF5bG9h",
            "ZDoCOAEaLQoLVGltaW5nRW50cnkSCwoDa2V5GAEgASgJEg0KBXZhbHVlGAIg",
            "ASgCOgI4AWIGcHJvdG8z"));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::ColmnarDB.Types.ComplexPolygonReflection.Descriptor, global::ColmnarDB.Types.PointReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::ColmnarDB.NetworkClient.Message.QueryResponseIntPayload), global::ColmnarDB.NetworkClient.Message.QueryResponseIntPayload.Parser, new[]{ "IntData" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::ColmnarDB.NetworkClient.Message.QueryResponseInt64Payload), global::ColmnarDB.NetworkClient.Message.QueryResponseInt64Payload.Parser, new[]{ "Int64Data" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::ColmnarDB.NetworkClient.Message.QueryResponseDateTimePayload), global::ColmnarDB.NetworkClient.Message.QueryResponseDateTimePayload.Parser, new[]{ "DateTimeData" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::ColmnarDB.NetworkClient.Message.QueryResponseFloatPayload), global::ColmnarDB.NetworkClient.Message.QueryResponseFloatPayload.Parser, new[]{ "FloatData" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::ColmnarDB.NetworkClient.Message.QueryResponseDoublePayload), global::ColmnarDB.NetworkClient.Message.QueryResponseDoublePayload.Parser, new[]{ "DoubleData" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::ColmnarDB.NetworkClient.Message.QueryResponsePolygonPayload), global::ColmnarDB.NetworkClient.Message.QueryResponsePolygonPayload.Parser, new[]{ "PolygonData" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::ColmnarDB.NetworkClient.Message.QueryResponsePointPayload), global::ColmnarDB.NetworkClient.Message.QueryResponsePointPayload.Parser, new[]{ "PointData" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::ColmnarDB.NetworkClient.Message.QueryResponseStringPayload), global::ColmnarDB.NetworkClient.Message.QueryResponseStringPayload.Parser, new[]{ "StringData" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::ColmnarDB.NetworkClient.Message.QueryNullmaskPayload), global::ColmnarDB.NetworkClient.Message.QueryNullmaskPayload.Parser, new[]{ "NullMask" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::ColmnarDB.NetworkClient.Message.QueryResponsePayload), global::ColmnarDB.NetworkClient.Message.QueryResponsePayload.Parser, new[]{ "IntPayload", "FloatPayload", "Int64Payload", "DoublePayload", "PointPayload", "PolygonPayload", "StringPayload", "DateTimePayload" }, new[]{ "Payload" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::ColmnarDB.NetworkClient.Message.QueryResponseMessage), global::ColmnarDB.NetworkClient.Message.QueryResponseMessage.Parser, new[]{ "Payloads", "NullBitMasks", "Timing", "ColumnOrder" }, null, null, null, new pbr::GeneratedClrTypeInfo[] { null, null, null, })
          }));
    }
    #endregion

  }
  #region Messages
  public sealed partial class QueryResponseIntPayload : pb::IMessage<QueryResponseIntPayload> {
    private static readonly pb::MessageParser<QueryResponseIntPayload> _parser = new pb::MessageParser<QueryResponseIntPayload>(() => new QueryResponseIntPayload());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<QueryResponseIntPayload> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::ColmnarDB.NetworkClient.Message.QueryResponseMessageReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public QueryResponseIntPayload() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public QueryResponseIntPayload(QueryResponseIntPayload other) : this() {
      intData_ = other.intData_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public QueryResponseIntPayload Clone() {
      return new QueryResponseIntPayload(this);
    }

    /// <summary>Field number for the "intData" field.</summary>
    public const int IntDataFieldNumber = 1;
    private static readonly pb::FieldCodec<int> _repeated_intData_codec
        = pb::FieldCodec.ForInt32(10);
    private readonly pbc::RepeatedField<int> intData_ = new pbc::RepeatedField<int>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<int> IntData {
      get { return intData_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as QueryResponseIntPayload);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(QueryResponseIntPayload other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!intData_.Equals(other.intData_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= intData_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      intData_.WriteTo(output, _repeated_intData_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += intData_.CalculateSize(_repeated_intData_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(QueryResponseIntPayload other) {
      if (other == null) {
        return;
      }
      intData_.Add(other.intData_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10:
          case 8: {
            intData_.AddEntriesFrom(input, _repeated_intData_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class QueryResponseInt64Payload : pb::IMessage<QueryResponseInt64Payload> {
    private static readonly pb::MessageParser<QueryResponseInt64Payload> _parser = new pb::MessageParser<QueryResponseInt64Payload>(() => new QueryResponseInt64Payload());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<QueryResponseInt64Payload> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::ColmnarDB.NetworkClient.Message.QueryResponseMessageReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public QueryResponseInt64Payload() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public QueryResponseInt64Payload(QueryResponseInt64Payload other) : this() {
      int64Data_ = other.int64Data_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public QueryResponseInt64Payload Clone() {
      return new QueryResponseInt64Payload(this);
    }

    /// <summary>Field number for the "int64Data" field.</summary>
    public const int Int64DataFieldNumber = 1;
    private static readonly pb::FieldCodec<long> _repeated_int64Data_codec
        = pb::FieldCodec.ForInt64(10);
    private readonly pbc::RepeatedField<long> int64Data_ = new pbc::RepeatedField<long>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<long> Int64Data {
      get { return int64Data_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as QueryResponseInt64Payload);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(QueryResponseInt64Payload other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!int64Data_.Equals(other.int64Data_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= int64Data_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      int64Data_.WriteTo(output, _repeated_int64Data_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += int64Data_.CalculateSize(_repeated_int64Data_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(QueryResponseInt64Payload other) {
      if (other == null) {
        return;
      }
      int64Data_.Add(other.int64Data_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10:
          case 8: {
            int64Data_.AddEntriesFrom(input, _repeated_int64Data_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class QueryResponseDateTimePayload : pb::IMessage<QueryResponseDateTimePayload> {
    private static readonly pb::MessageParser<QueryResponseDateTimePayload> _parser = new pb::MessageParser<QueryResponseDateTimePayload>(() => new QueryResponseDateTimePayload());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<QueryResponseDateTimePayload> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::ColmnarDB.NetworkClient.Message.QueryResponseMessageReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public QueryResponseDateTimePayload() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public QueryResponseDateTimePayload(QueryResponseDateTimePayload other) : this() {
      dateTimeData_ = other.dateTimeData_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public QueryResponseDateTimePayload Clone() {
      return new QueryResponseDateTimePayload(this);
    }

    /// <summary>Field number for the "dateTimeData" field.</summary>
    public const int DateTimeDataFieldNumber = 1;
    private static readonly pb::FieldCodec<long> _repeated_dateTimeData_codec
        = pb::FieldCodec.ForInt64(10);
    private readonly pbc::RepeatedField<long> dateTimeData_ = new pbc::RepeatedField<long>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<long> DateTimeData {
      get { return dateTimeData_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as QueryResponseDateTimePayload);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(QueryResponseDateTimePayload other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!dateTimeData_.Equals(other.dateTimeData_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= dateTimeData_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      dateTimeData_.WriteTo(output, _repeated_dateTimeData_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += dateTimeData_.CalculateSize(_repeated_dateTimeData_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(QueryResponseDateTimePayload other) {
      if (other == null) {
        return;
      }
      dateTimeData_.Add(other.dateTimeData_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10:
          case 8: {
            dateTimeData_.AddEntriesFrom(input, _repeated_dateTimeData_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class QueryResponseFloatPayload : pb::IMessage<QueryResponseFloatPayload> {
    private static readonly pb::MessageParser<QueryResponseFloatPayload> _parser = new pb::MessageParser<QueryResponseFloatPayload>(() => new QueryResponseFloatPayload());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<QueryResponseFloatPayload> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::ColmnarDB.NetworkClient.Message.QueryResponseMessageReflection.Descriptor.MessageTypes[3]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public QueryResponseFloatPayload() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public QueryResponseFloatPayload(QueryResponseFloatPayload other) : this() {
      floatData_ = other.floatData_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public QueryResponseFloatPayload Clone() {
      return new QueryResponseFloatPayload(this);
    }

    /// <summary>Field number for the "floatData" field.</summary>
    public const int FloatDataFieldNumber = 1;
    private static readonly pb::FieldCodec<float> _repeated_floatData_codec
        = pb::FieldCodec.ForFloat(10);
    private readonly pbc::RepeatedField<float> floatData_ = new pbc::RepeatedField<float>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<float> FloatData {
      get { return floatData_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as QueryResponseFloatPayload);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(QueryResponseFloatPayload other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!floatData_.Equals(other.floatData_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= floatData_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      floatData_.WriteTo(output, _repeated_floatData_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += floatData_.CalculateSize(_repeated_floatData_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(QueryResponseFloatPayload other) {
      if (other == null) {
        return;
      }
      floatData_.Add(other.floatData_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10:
          case 13: {
            floatData_.AddEntriesFrom(input, _repeated_floatData_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class QueryResponseDoublePayload : pb::IMessage<QueryResponseDoublePayload> {
    private static readonly pb::MessageParser<QueryResponseDoublePayload> _parser = new pb::MessageParser<QueryResponseDoublePayload>(() => new QueryResponseDoublePayload());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<QueryResponseDoublePayload> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::ColmnarDB.NetworkClient.Message.QueryResponseMessageReflection.Descriptor.MessageTypes[4]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public QueryResponseDoublePayload() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public QueryResponseDoublePayload(QueryResponseDoublePayload other) : this() {
      doubleData_ = other.doubleData_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public QueryResponseDoublePayload Clone() {
      return new QueryResponseDoublePayload(this);
    }

    /// <summary>Field number for the "doubleData" field.</summary>
    public const int DoubleDataFieldNumber = 1;
    private static readonly pb::FieldCodec<double> _repeated_doubleData_codec
        = pb::FieldCodec.ForDouble(10);
    private readonly pbc::RepeatedField<double> doubleData_ = new pbc::RepeatedField<double>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<double> DoubleData {
      get { return doubleData_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as QueryResponseDoublePayload);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(QueryResponseDoublePayload other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!doubleData_.Equals(other.doubleData_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= doubleData_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      doubleData_.WriteTo(output, _repeated_doubleData_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += doubleData_.CalculateSize(_repeated_doubleData_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(QueryResponseDoublePayload other) {
      if (other == null) {
        return;
      }
      doubleData_.Add(other.doubleData_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10:
          case 9: {
            doubleData_.AddEntriesFrom(input, _repeated_doubleData_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class QueryResponsePolygonPayload : pb::IMessage<QueryResponsePolygonPayload> {
    private static readonly pb::MessageParser<QueryResponsePolygonPayload> _parser = new pb::MessageParser<QueryResponsePolygonPayload>(() => new QueryResponsePolygonPayload());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<QueryResponsePolygonPayload> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::ColmnarDB.NetworkClient.Message.QueryResponseMessageReflection.Descriptor.MessageTypes[5]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public QueryResponsePolygonPayload() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public QueryResponsePolygonPayload(QueryResponsePolygonPayload other) : this() {
      polygonData_ = other.polygonData_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public QueryResponsePolygonPayload Clone() {
      return new QueryResponsePolygonPayload(this);
    }

    /// <summary>Field number for the "polygonData" field.</summary>
    public const int PolygonDataFieldNumber = 1;
    private static readonly pb::FieldCodec<global::ColmnarDB.Types.ComplexPolygon> _repeated_polygonData_codec
        = pb::FieldCodec.ForMessage(10, global::ColmnarDB.Types.ComplexPolygon.Parser);
    private readonly pbc::RepeatedField<global::ColmnarDB.Types.ComplexPolygon> polygonData_ = new pbc::RepeatedField<global::ColmnarDB.Types.ComplexPolygon>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::ColmnarDB.Types.ComplexPolygon> PolygonData {
      get { return polygonData_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as QueryResponsePolygonPayload);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(QueryResponsePolygonPayload other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!polygonData_.Equals(other.polygonData_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= polygonData_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      polygonData_.WriteTo(output, _repeated_polygonData_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += polygonData_.CalculateSize(_repeated_polygonData_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(QueryResponsePolygonPayload other) {
      if (other == null) {
        return;
      }
      polygonData_.Add(other.polygonData_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            polygonData_.AddEntriesFrom(input, _repeated_polygonData_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class QueryResponsePointPayload : pb::IMessage<QueryResponsePointPayload> {
    private static readonly pb::MessageParser<QueryResponsePointPayload> _parser = new pb::MessageParser<QueryResponsePointPayload>(() => new QueryResponsePointPayload());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<QueryResponsePointPayload> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::ColmnarDB.NetworkClient.Message.QueryResponseMessageReflection.Descriptor.MessageTypes[6]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public QueryResponsePointPayload() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public QueryResponsePointPayload(QueryResponsePointPayload other) : this() {
      pointData_ = other.pointData_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public QueryResponsePointPayload Clone() {
      return new QueryResponsePointPayload(this);
    }

    /// <summary>Field number for the "pointData" field.</summary>
    public const int PointDataFieldNumber = 1;
    private static readonly pb::FieldCodec<global::ColmnarDB.Types.Point> _repeated_pointData_codec
        = pb::FieldCodec.ForMessage(10, global::ColmnarDB.Types.Point.Parser);
    private readonly pbc::RepeatedField<global::ColmnarDB.Types.Point> pointData_ = new pbc::RepeatedField<global::ColmnarDB.Types.Point>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::ColmnarDB.Types.Point> PointData {
      get { return pointData_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as QueryResponsePointPayload);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(QueryResponsePointPayload other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!pointData_.Equals(other.pointData_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= pointData_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      pointData_.WriteTo(output, _repeated_pointData_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += pointData_.CalculateSize(_repeated_pointData_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(QueryResponsePointPayload other) {
      if (other == null) {
        return;
      }
      pointData_.Add(other.pointData_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            pointData_.AddEntriesFrom(input, _repeated_pointData_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class QueryResponseStringPayload : pb::IMessage<QueryResponseStringPayload> {
    private static readonly pb::MessageParser<QueryResponseStringPayload> _parser = new pb::MessageParser<QueryResponseStringPayload>(() => new QueryResponseStringPayload());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<QueryResponseStringPayload> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::ColmnarDB.NetworkClient.Message.QueryResponseMessageReflection.Descriptor.MessageTypes[7]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public QueryResponseStringPayload() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public QueryResponseStringPayload(QueryResponseStringPayload other) : this() {
      stringData_ = other.stringData_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public QueryResponseStringPayload Clone() {
      return new QueryResponseStringPayload(this);
    }

    /// <summary>Field number for the "stringData" field.</summary>
    public const int StringDataFieldNumber = 1;
    private static readonly pb::FieldCodec<string> _repeated_stringData_codec
        = pb::FieldCodec.ForString(10);
    private readonly pbc::RepeatedField<string> stringData_ = new pbc::RepeatedField<string>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<string> StringData {
      get { return stringData_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as QueryResponseStringPayload);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(QueryResponseStringPayload other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!stringData_.Equals(other.stringData_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= stringData_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      stringData_.WriteTo(output, _repeated_stringData_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += stringData_.CalculateSize(_repeated_stringData_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(QueryResponseStringPayload other) {
      if (other == null) {
        return;
      }
      stringData_.Add(other.stringData_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            stringData_.AddEntriesFrom(input, _repeated_stringData_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class QueryNullmaskPayload : pb::IMessage<QueryNullmaskPayload> {
    private static readonly pb::MessageParser<QueryNullmaskPayload> _parser = new pb::MessageParser<QueryNullmaskPayload>(() => new QueryNullmaskPayload());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<QueryNullmaskPayload> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::ColmnarDB.NetworkClient.Message.QueryResponseMessageReflection.Descriptor.MessageTypes[8]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public QueryNullmaskPayload() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public QueryNullmaskPayload(QueryNullmaskPayload other) : this() {
      nullMask_ = other.nullMask_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public QueryNullmaskPayload Clone() {
      return new QueryNullmaskPayload(this);
    }

    /// <summary>Field number for the "nullMask" field.</summary>
    public const int NullMaskFieldNumber = 1;
    private static readonly pb::FieldCodec<ulong> _repeated_nullMask_codec
        = pb::FieldCodec.ForUInt64(10);
    private readonly pbc::RepeatedField<ulong> nullMask_ = new pbc::RepeatedField<ulong>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<ulong> NullMask {
      get { return nullMask_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as QueryNullmaskPayload);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(QueryNullmaskPayload other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!nullMask_.Equals(other.nullMask_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= nullMask_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      nullMask_.WriteTo(output, _repeated_nullMask_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += nullMask_.CalculateSize(_repeated_nullMask_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(QueryNullmaskPayload other) {
      if (other == null) {
        return;
      }
      nullMask_.Add(other.nullMask_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10:
          case 8: {
            nullMask_.AddEntriesFrom(input, _repeated_nullMask_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class QueryResponsePayload : pb::IMessage<QueryResponsePayload> {
    private static readonly pb::MessageParser<QueryResponsePayload> _parser = new pb::MessageParser<QueryResponsePayload>(() => new QueryResponsePayload());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<QueryResponsePayload> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::ColmnarDB.NetworkClient.Message.QueryResponseMessageReflection.Descriptor.MessageTypes[9]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public QueryResponsePayload() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public QueryResponsePayload(QueryResponsePayload other) : this() {
      switch (other.PayloadCase) {
        case PayloadOneofCase.IntPayload:
          IntPayload = other.IntPayload.Clone();
          break;
        case PayloadOneofCase.FloatPayload:
          FloatPayload = other.FloatPayload.Clone();
          break;
        case PayloadOneofCase.Int64Payload:
          Int64Payload = other.Int64Payload.Clone();
          break;
        case PayloadOneofCase.DoublePayload:
          DoublePayload = other.DoublePayload.Clone();
          break;
        case PayloadOneofCase.PointPayload:
          PointPayload = other.PointPayload.Clone();
          break;
        case PayloadOneofCase.PolygonPayload:
          PolygonPayload = other.PolygonPayload.Clone();
          break;
        case PayloadOneofCase.StringPayload:
          StringPayload = other.StringPayload.Clone();
          break;
        case PayloadOneofCase.DateTimePayload:
          DateTimePayload = other.DateTimePayload.Clone();
          break;
      }

      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public QueryResponsePayload Clone() {
      return new QueryResponsePayload(this);
    }

    /// <summary>Field number for the "intPayload" field.</summary>
    public const int IntPayloadFieldNumber = 2;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::ColmnarDB.NetworkClient.Message.QueryResponseIntPayload IntPayload {
      get { return payloadCase_ == PayloadOneofCase.IntPayload ? (global::ColmnarDB.NetworkClient.Message.QueryResponseIntPayload) payload_ : null; }
      set {
        payload_ = value;
        payloadCase_ = value == null ? PayloadOneofCase.None : PayloadOneofCase.IntPayload;
      }
    }

    /// <summary>Field number for the "floatPayload" field.</summary>
    public const int FloatPayloadFieldNumber = 3;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::ColmnarDB.NetworkClient.Message.QueryResponseFloatPayload FloatPayload {
      get { return payloadCase_ == PayloadOneofCase.FloatPayload ? (global::ColmnarDB.NetworkClient.Message.QueryResponseFloatPayload) payload_ : null; }
      set {
        payload_ = value;
        payloadCase_ = value == null ? PayloadOneofCase.None : PayloadOneofCase.FloatPayload;
      }
    }

    /// <summary>Field number for the "int64Payload" field.</summary>
    public const int Int64PayloadFieldNumber = 4;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::ColmnarDB.NetworkClient.Message.QueryResponseInt64Payload Int64Payload {
      get { return payloadCase_ == PayloadOneofCase.Int64Payload ? (global::ColmnarDB.NetworkClient.Message.QueryResponseInt64Payload) payload_ : null; }
      set {
        payload_ = value;
        payloadCase_ = value == null ? PayloadOneofCase.None : PayloadOneofCase.Int64Payload;
      }
    }

    /// <summary>Field number for the "doublePayload" field.</summary>
    public const int DoublePayloadFieldNumber = 5;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::ColmnarDB.NetworkClient.Message.QueryResponseDoublePayload DoublePayload {
      get { return payloadCase_ == PayloadOneofCase.DoublePayload ? (global::ColmnarDB.NetworkClient.Message.QueryResponseDoublePayload) payload_ : null; }
      set {
        payload_ = value;
        payloadCase_ = value == null ? PayloadOneofCase.None : PayloadOneofCase.DoublePayload;
      }
    }

    /// <summary>Field number for the "pointPayload" field.</summary>
    public const int PointPayloadFieldNumber = 6;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::ColmnarDB.NetworkClient.Message.QueryResponsePointPayload PointPayload {
      get { return payloadCase_ == PayloadOneofCase.PointPayload ? (global::ColmnarDB.NetworkClient.Message.QueryResponsePointPayload) payload_ : null; }
      set {
        payload_ = value;
        payloadCase_ = value == null ? PayloadOneofCase.None : PayloadOneofCase.PointPayload;
      }
    }

    /// <summary>Field number for the "polygonPayload" field.</summary>
    public const int PolygonPayloadFieldNumber = 7;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::ColmnarDB.NetworkClient.Message.QueryResponsePolygonPayload PolygonPayload {
      get { return payloadCase_ == PayloadOneofCase.PolygonPayload ? (global::ColmnarDB.NetworkClient.Message.QueryResponsePolygonPayload) payload_ : null; }
      set {
        payload_ = value;
        payloadCase_ = value == null ? PayloadOneofCase.None : PayloadOneofCase.PolygonPayload;
      }
    }

    /// <summary>Field number for the "stringPayload" field.</summary>
    public const int StringPayloadFieldNumber = 8;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::ColmnarDB.NetworkClient.Message.QueryResponseStringPayload StringPayload {
      get { return payloadCase_ == PayloadOneofCase.StringPayload ? (global::ColmnarDB.NetworkClient.Message.QueryResponseStringPayload) payload_ : null; }
      set {
        payload_ = value;
        payloadCase_ = value == null ? PayloadOneofCase.None : PayloadOneofCase.StringPayload;
      }
    }

    /// <summary>Field number for the "dateTimePayload" field.</summary>
    public const int DateTimePayloadFieldNumber = 9;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::ColmnarDB.NetworkClient.Message.QueryResponseDateTimePayload DateTimePayload {
      get { return payloadCase_ == PayloadOneofCase.DateTimePayload ? (global::ColmnarDB.NetworkClient.Message.QueryResponseDateTimePayload) payload_ : null; }
      set {
        payload_ = value;
        payloadCase_ = value == null ? PayloadOneofCase.None : PayloadOneofCase.DateTimePayload;
      }
    }

    private object payload_;
    /// <summary>Enum of possible cases for the "payload" oneof.</summary>
    public enum PayloadOneofCase {
      None = 0,
      IntPayload = 2,
      FloatPayload = 3,
      Int64Payload = 4,
      DoublePayload = 5,
      PointPayload = 6,
      PolygonPayload = 7,
      StringPayload = 8,
      DateTimePayload = 9,
    }
    private PayloadOneofCase payloadCase_ = PayloadOneofCase.None;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PayloadOneofCase PayloadCase {
      get { return payloadCase_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearPayload() {
      payloadCase_ = PayloadOneofCase.None;
      payload_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as QueryResponsePayload);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(QueryResponsePayload other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(IntPayload, other.IntPayload)) return false;
      if (!object.Equals(FloatPayload, other.FloatPayload)) return false;
      if (!object.Equals(Int64Payload, other.Int64Payload)) return false;
      if (!object.Equals(DoublePayload, other.DoublePayload)) return false;
      if (!object.Equals(PointPayload, other.PointPayload)) return false;
      if (!object.Equals(PolygonPayload, other.PolygonPayload)) return false;
      if (!object.Equals(StringPayload, other.StringPayload)) return false;
      if (!object.Equals(DateTimePayload, other.DateTimePayload)) return false;
      if (PayloadCase != other.PayloadCase) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (payloadCase_ == PayloadOneofCase.IntPayload) hash ^= IntPayload.GetHashCode();
      if (payloadCase_ == PayloadOneofCase.FloatPayload) hash ^= FloatPayload.GetHashCode();
      if (payloadCase_ == PayloadOneofCase.Int64Payload) hash ^= Int64Payload.GetHashCode();
      if (payloadCase_ == PayloadOneofCase.DoublePayload) hash ^= DoublePayload.GetHashCode();
      if (payloadCase_ == PayloadOneofCase.PointPayload) hash ^= PointPayload.GetHashCode();
      if (payloadCase_ == PayloadOneofCase.PolygonPayload) hash ^= PolygonPayload.GetHashCode();
      if (payloadCase_ == PayloadOneofCase.StringPayload) hash ^= StringPayload.GetHashCode();
      if (payloadCase_ == PayloadOneofCase.DateTimePayload) hash ^= DateTimePayload.GetHashCode();
      hash ^= (int) payloadCase_;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (payloadCase_ == PayloadOneofCase.IntPayload) {
        output.WriteRawTag(18);
        output.WriteMessage(IntPayload);
      }
      if (payloadCase_ == PayloadOneofCase.FloatPayload) {
        output.WriteRawTag(26);
        output.WriteMessage(FloatPayload);
      }
      if (payloadCase_ == PayloadOneofCase.Int64Payload) {
        output.WriteRawTag(34);
        output.WriteMessage(Int64Payload);
      }
      if (payloadCase_ == PayloadOneofCase.DoublePayload) {
        output.WriteRawTag(42);
        output.WriteMessage(DoublePayload);
      }
      if (payloadCase_ == PayloadOneofCase.PointPayload) {
        output.WriteRawTag(50);
        output.WriteMessage(PointPayload);
      }
      if (payloadCase_ == PayloadOneofCase.PolygonPayload) {
        output.WriteRawTag(58);
        output.WriteMessage(PolygonPayload);
      }
      if (payloadCase_ == PayloadOneofCase.StringPayload) {
        output.WriteRawTag(66);
        output.WriteMessage(StringPayload);
      }
      if (payloadCase_ == PayloadOneofCase.DateTimePayload) {
        output.WriteRawTag(74);
        output.WriteMessage(DateTimePayload);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (payloadCase_ == PayloadOneofCase.IntPayload) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(IntPayload);
      }
      if (payloadCase_ == PayloadOneofCase.FloatPayload) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(FloatPayload);
      }
      if (payloadCase_ == PayloadOneofCase.Int64Payload) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Int64Payload);
      }
      if (payloadCase_ == PayloadOneofCase.DoublePayload) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(DoublePayload);
      }
      if (payloadCase_ == PayloadOneofCase.PointPayload) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(PointPayload);
      }
      if (payloadCase_ == PayloadOneofCase.PolygonPayload) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(PolygonPayload);
      }
      if (payloadCase_ == PayloadOneofCase.StringPayload) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(StringPayload);
      }
      if (payloadCase_ == PayloadOneofCase.DateTimePayload) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(DateTimePayload);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(QueryResponsePayload other) {
      if (other == null) {
        return;
      }
      switch (other.PayloadCase) {
        case PayloadOneofCase.IntPayload:
          if (IntPayload == null) {
            IntPayload = new global::ColmnarDB.NetworkClient.Message.QueryResponseIntPayload();
          }
          IntPayload.MergeFrom(other.IntPayload);
          break;
        case PayloadOneofCase.FloatPayload:
          if (FloatPayload == null) {
            FloatPayload = new global::ColmnarDB.NetworkClient.Message.QueryResponseFloatPayload();
          }
          FloatPayload.MergeFrom(other.FloatPayload);
          break;
        case PayloadOneofCase.Int64Payload:
          if (Int64Payload == null) {
            Int64Payload = new global::ColmnarDB.NetworkClient.Message.QueryResponseInt64Payload();
          }
          Int64Payload.MergeFrom(other.Int64Payload);
          break;
        case PayloadOneofCase.DoublePayload:
          if (DoublePayload == null) {
            DoublePayload = new global::ColmnarDB.NetworkClient.Message.QueryResponseDoublePayload();
          }
          DoublePayload.MergeFrom(other.DoublePayload);
          break;
        case PayloadOneofCase.PointPayload:
          if (PointPayload == null) {
            PointPayload = new global::ColmnarDB.NetworkClient.Message.QueryResponsePointPayload();
          }
          PointPayload.MergeFrom(other.PointPayload);
          break;
        case PayloadOneofCase.PolygonPayload:
          if (PolygonPayload == null) {
            PolygonPayload = new global::ColmnarDB.NetworkClient.Message.QueryResponsePolygonPayload();
          }
          PolygonPayload.MergeFrom(other.PolygonPayload);
          break;
        case PayloadOneofCase.StringPayload:
          if (StringPayload == null) {
            StringPayload = new global::ColmnarDB.NetworkClient.Message.QueryResponseStringPayload();
          }
          StringPayload.MergeFrom(other.StringPayload);
          break;
        case PayloadOneofCase.DateTimePayload:
          if (DateTimePayload == null) {
            DateTimePayload = new global::ColmnarDB.NetworkClient.Message.QueryResponseDateTimePayload();
          }
          DateTimePayload.MergeFrom(other.DateTimePayload);
          break;
      }

      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 18: {
            global::ColmnarDB.NetworkClient.Message.QueryResponseIntPayload subBuilder = new global::ColmnarDB.NetworkClient.Message.QueryResponseIntPayload();
            if (payloadCase_ == PayloadOneofCase.IntPayload) {
              subBuilder.MergeFrom(IntPayload);
            }
            input.ReadMessage(subBuilder);
            IntPayload = subBuilder;
            break;
          }
          case 26: {
            global::ColmnarDB.NetworkClient.Message.QueryResponseFloatPayload subBuilder = new global::ColmnarDB.NetworkClient.Message.QueryResponseFloatPayload();
            if (payloadCase_ == PayloadOneofCase.FloatPayload) {
              subBuilder.MergeFrom(FloatPayload);
            }
            input.ReadMessage(subBuilder);
            FloatPayload = subBuilder;
            break;
          }
          case 34: {
            global::ColmnarDB.NetworkClient.Message.QueryResponseInt64Payload subBuilder = new global::ColmnarDB.NetworkClient.Message.QueryResponseInt64Payload();
            if (payloadCase_ == PayloadOneofCase.Int64Payload) {
              subBuilder.MergeFrom(Int64Payload);
            }
            input.ReadMessage(subBuilder);
            Int64Payload = subBuilder;
            break;
          }
          case 42: {
            global::ColmnarDB.NetworkClient.Message.QueryResponseDoublePayload subBuilder = new global::ColmnarDB.NetworkClient.Message.QueryResponseDoublePayload();
            if (payloadCase_ == PayloadOneofCase.DoublePayload) {
              subBuilder.MergeFrom(DoublePayload);
            }
            input.ReadMessage(subBuilder);
            DoublePayload = subBuilder;
            break;
          }
          case 50: {
            global::ColmnarDB.NetworkClient.Message.QueryResponsePointPayload subBuilder = new global::ColmnarDB.NetworkClient.Message.QueryResponsePointPayload();
            if (payloadCase_ == PayloadOneofCase.PointPayload) {
              subBuilder.MergeFrom(PointPayload);
            }
            input.ReadMessage(subBuilder);
            PointPayload = subBuilder;
            break;
          }
          case 58: {
            global::ColmnarDB.NetworkClient.Message.QueryResponsePolygonPayload subBuilder = new global::ColmnarDB.NetworkClient.Message.QueryResponsePolygonPayload();
            if (payloadCase_ == PayloadOneofCase.PolygonPayload) {
              subBuilder.MergeFrom(PolygonPayload);
            }
            input.ReadMessage(subBuilder);
            PolygonPayload = subBuilder;
            break;
          }
          case 66: {
            global::ColmnarDB.NetworkClient.Message.QueryResponseStringPayload subBuilder = new global::ColmnarDB.NetworkClient.Message.QueryResponseStringPayload();
            if (payloadCase_ == PayloadOneofCase.StringPayload) {
              subBuilder.MergeFrom(StringPayload);
            }
            input.ReadMessage(subBuilder);
            StringPayload = subBuilder;
            break;
          }
          case 74: {
            global::ColmnarDB.NetworkClient.Message.QueryResponseDateTimePayload subBuilder = new global::ColmnarDB.NetworkClient.Message.QueryResponseDateTimePayload();
            if (payloadCase_ == PayloadOneofCase.DateTimePayload) {
              subBuilder.MergeFrom(DateTimePayload);
            }
            input.ReadMessage(subBuilder);
            DateTimePayload = subBuilder;
            break;
          }
        }
      }
    }

  }

  public sealed partial class QueryResponseMessage : pb::IMessage<QueryResponseMessage> {
    private static readonly pb::MessageParser<QueryResponseMessage> _parser = new pb::MessageParser<QueryResponseMessage>(() => new QueryResponseMessage());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<QueryResponseMessage> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::ColmnarDB.NetworkClient.Message.QueryResponseMessageReflection.Descriptor.MessageTypes[10]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public QueryResponseMessage() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public QueryResponseMessage(QueryResponseMessage other) : this() {
      payloads_ = other.payloads_.Clone();
      nullBitMasks_ = other.nullBitMasks_.Clone();
      timing_ = other.timing_.Clone();
      columnOrder_ = other.columnOrder_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public QueryResponseMessage Clone() {
      return new QueryResponseMessage(this);
    }

    /// <summary>Field number for the "payloads" field.</summary>
    public const int PayloadsFieldNumber = 1;
    private static readonly pbc::MapField<string, global::ColmnarDB.NetworkClient.Message.QueryResponsePayload>.Codec _map_payloads_codec
        = new pbc::MapField<string, global::ColmnarDB.NetworkClient.Message.QueryResponsePayload>.Codec(pb::FieldCodec.ForString(10, ""), pb::FieldCodec.ForMessage(18, global::ColmnarDB.NetworkClient.Message.QueryResponsePayload.Parser), 10);
    private readonly pbc::MapField<string, global::ColmnarDB.NetworkClient.Message.QueryResponsePayload> payloads_ = new pbc::MapField<string, global::ColmnarDB.NetworkClient.Message.QueryResponsePayload>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<string, global::ColmnarDB.NetworkClient.Message.QueryResponsePayload> Payloads {
      get { return payloads_; }
    }

    /// <summary>Field number for the "nullBitMasks" field.</summary>
    public const int NullBitMasksFieldNumber = 3;
    private static readonly pbc::MapField<string, global::ColmnarDB.NetworkClient.Message.QueryNullmaskPayload>.Codec _map_nullBitMasks_codec
        = new pbc::MapField<string, global::ColmnarDB.NetworkClient.Message.QueryNullmaskPayload>.Codec(pb::FieldCodec.ForString(10, ""), pb::FieldCodec.ForMessage(18, global::ColmnarDB.NetworkClient.Message.QueryNullmaskPayload.Parser), 26);
    private readonly pbc::MapField<string, global::ColmnarDB.NetworkClient.Message.QueryNullmaskPayload> nullBitMasks_ = new pbc::MapField<string, global::ColmnarDB.NetworkClient.Message.QueryNullmaskPayload>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<string, global::ColmnarDB.NetworkClient.Message.QueryNullmaskPayload> NullBitMasks {
      get { return nullBitMasks_; }
    }

    /// <summary>Field number for the "timing" field.</summary>
    public const int TimingFieldNumber = 2;
    private static readonly pbc::MapField<string, float>.Codec _map_timing_codec
        = new pbc::MapField<string, float>.Codec(pb::FieldCodec.ForString(10, ""), pb::FieldCodec.ForFloat(21, 0F), 18);
    private readonly pbc::MapField<string, float> timing_ = new pbc::MapField<string, float>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<string, float> Timing {
      get { return timing_; }
    }

    /// <summary>Field number for the "columnOrder" field.</summary>
    public const int ColumnOrderFieldNumber = 4;
    private static readonly pb::FieldCodec<string> _repeated_columnOrder_codec
        = pb::FieldCodec.ForString(34);
    private readonly pbc::RepeatedField<string> columnOrder_ = new pbc::RepeatedField<string>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<string> ColumnOrder {
      get { return columnOrder_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as QueryResponseMessage);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(QueryResponseMessage other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!Payloads.Equals(other.Payloads)) return false;
      if (!NullBitMasks.Equals(other.NullBitMasks)) return false;
      if (!Timing.Equals(other.Timing)) return false;
      if(!columnOrder_.Equals(other.columnOrder_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= Payloads.GetHashCode();
      hash ^= NullBitMasks.GetHashCode();
      hash ^= Timing.GetHashCode();
      hash ^= columnOrder_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      payloads_.WriteTo(output, _map_payloads_codec);
      timing_.WriteTo(output, _map_timing_codec);
      nullBitMasks_.WriteTo(output, _map_nullBitMasks_codec);
      columnOrder_.WriteTo(output, _repeated_columnOrder_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += payloads_.CalculateSize(_map_payloads_codec);
      size += nullBitMasks_.CalculateSize(_map_nullBitMasks_codec);
      size += timing_.CalculateSize(_map_timing_codec);
      size += columnOrder_.CalculateSize(_repeated_columnOrder_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(QueryResponseMessage other) {
      if (other == null) {
        return;
      }
      payloads_.Add(other.payloads_);
      nullBitMasks_.Add(other.nullBitMasks_);
      timing_.Add(other.timing_);
      columnOrder_.Add(other.columnOrder_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            payloads_.AddEntriesFrom(input, _map_payloads_codec);
            break;
          }
          case 18: {
            timing_.AddEntriesFrom(input, _map_timing_codec);
            break;
          }
          case 26: {
            nullBitMasks_.AddEntriesFrom(input, _map_nullBitMasks_codec);
            break;
          }
          case 34: {
            columnOrder_.AddEntriesFrom(input, _repeated_columnOrder_codec);
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
